//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(GlueForth.WebApi.BlueNorthEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets7e9e6ef9689831718fbbae368b900d3feab17befc2a4bccee2de099cdde2fca3))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets7e9e6ef9689831718fbbae368b900d3feab17befc2a4bccee2de099cdde2fca3 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "7e9e6ef9689831718fbbae368b900d3feab17befc2a4bccee2de099cdde2fca3"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "BlueNorthModelStoreContainer.Address")
            {
                return GetView0();
            }

            if (extentName == "BlueNorthModelStoreContainer.CharacteristicGuidanceNote")
            {
                return GetView1();
            }

            if (extentName == "BlueNorthModelStoreContainer.CommodityCategory")
            {
                return GetView2();
            }

            if (extentName == "BlueNorthModelStoreContainer.CommodityIndicatorGuidance")
            {
                return GetView3();
            }

            if (extentName == "BlueNorthModelStoreContainer.Country")
            {
                return GetView4();
            }

            if (extentName == "BlueNorthModelStoreContainer.Dimension")
            {
                return GetView5();
            }

            if (extentName == "BlueNorthModelStoreContainer.Grade")
            {
                return GetView6();
            }

            if (extentName == "BlueNorthModelStoreContainer.Organization")
            {
                return GetView7();
            }

            if (extentName == "BlueNorthModelStoreContainer.Party")
            {
                return GetView8();
            }

            if (extentName == "BlueNorthModelStoreContainer.PermissionPolicyUser")
            {
                return GetView9();
            }

            if (extentName == "BlueNorthModelStoreContainer.Person")
            {
                return GetView10();
            }

            if (extentName == "BlueNorthModelStoreContainer.PhoneNumber")
            {
                return GetView11();
            }

            if (extentName == "BlueNorthModelStoreContainer.PrincipleGroup")
            {
                return GetView12();
            }

            if (extentName == "BlueNorthModelStoreContainer.QuestionGroup")
            {
                return GetView13();
            }

            if (extentName == "BlueNorthModelStoreContainer.Retailer")
            {
                return GetView14();
            }

            if (extentName == "BlueNorthModelStoreContainer.Standard")
            {
                return GetView15();
            }

            if (extentName == "BlueNorthModelStoreContainer.StandardChapter")
            {
                return GetView16();
            }

            if (extentName == "BlueNorthModelStoreContainer.StandardContent")
            {
                return GetView17();
            }

            if (extentName == "BlueNorthModelStoreContainer.StandardStandards_CommodityCommodities")
            {
                return GetView18();
            }

            if (extentName == "BlueNorthModelStoreContainer.Supplier")
            {
                return GetView19();
            }

            if (extentName == "BlueNorthModelStoreContainer.SupplierSuppliers_CommodityCommodities")
            {
                return GetView20();
            }

            if (extentName == "BlueNorthModelStoreContainer.Unit")
            {
                return GetView21();
            }

            if (extentName == "BlueNorthModelStoreContainer.UnitOfMeasure")
            {
                return GetView22();
            }

            if (extentName == "BlueNorthModelStoreContainer.UnitType")
            {
                return GetView23();
            }

            if (extentName == "BlueNorthModelStoreContainer.Version")
            {
                return GetView24();
            }

            if (extentName == "BlueNorthModelStoreContainer.Organisation")
            {
                return GetView25();
            }

            if (extentName == "BlueNorthModelStoreContainer.PermissionPolicyRole")
            {
                return GetView26();
            }

            if (extentName == "BlueNorthModelStoreContainer.PermissionPolicyUserUsers_PermissionPolicyRoleRoles")
            {
                return GetView27();
            }

            if (extentName == "BlueNorthModelStoreContainer.CommodityCommodities_CharacteristicCharacteristics")
            {
                return GetView28();
            }

            if (extentName == "BlueNorthModelStoreContainer.DimensionDimensions_CommodityCommodities")
            {
                return GetView29();
            }

            if (extentName == "BlueNorthModelStoreContainer.PrinciplePrinciples_CommodityCommodities")
            {
                return GetView30();
            }

            if (extentName == "BlueNorthModelStoreContainer.SupplierRetailers_RetailerSuppliers")
            {
                return GetView31();
            }

            if (extentName == "BlueNorthModelStoreContainer.UnitUnits_RetailerRetailers")
            {
                return GetView32();
            }

            if (extentName == "BlueNorthModelStoreContainer.UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields")
            {
                return GetView33();
            }

            if (extentName == "BlueNorthModelStoreContainer.PrimaryDataType")
            {
                return GetView34();
            }

            if (extentName == "BlueNorthModelStoreContainer.OrganisationType")
            {
                return GetView35();
            }

            if (extentName == "BlueNorthModelStoreContainer.SPADataSet")
            {
                return GetView36();
            }

            if (extentName == "BlueNorthModelStoreContainer.Question")
            {
                return GetView37();
            }

            if (extentName == "BlueNorthModelStoreContainer.IndicatorDataSet")
            {
                return GetView38();
            }

            if (extentName == "BlueNorthModelStoreContainer.Characteristic")
            {
                return GetView39();
            }

            if (extentName == "BlueNorthModelStoreContainer.Answer")
            {
                return GetView40();
            }

            if (extentName == "BlueNorthModelStoreContainer.SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics")
            {
                return GetView41();
            }

            if (extentName == "BlueNorthModelStoreContainer.QuestionGroupQuestionGroups_CharacteristicCharacteristics")
            {
                return GetView42();
            }

            if (extentName == "BlueNorthModelStoreContainer.QuestionQuestions_CharacteristicCharacteristics")
            {
                return GetView43();
            }

            if (extentName == "BlueNorthModelStoreContainer.FrameworkFrameworks_CharacteristicCharacteristics")
            {
                return GetView44();
            }

            if (extentName == "BlueNorthModelStoreContainer.FrameworkFrameworks_CommodityCommodities")
            {
                return GetView45();
            }

            if (extentName == "BlueNorthModelStoreContainer.Scoring")
            {
                return GetView46();
            }

            if (extentName == "BlueNorthModelStoreContainer.StandardContentStandardContents_CharacteristicCharacteristics")
            {
                return GetView47();
            }

            if (extentName == "BlueNorthModelStoreContainer.UnitUnits_StandardStandards")
            {
                return GetView48();
            }

            if (extentName == "BlueNorthModelStoreContainer.Framework")
            {
                return GetView49();
            }

            if (extentName == "BlueNorthModelStoreContainer.UnitUnits_SupplierSuppliers")
            {
                return GetView50();
            }

            if (extentName == "BlueNorthModelStoreContainer.PriorCharacteristic")
            {
                return GetView51();
            }

            if (extentName == "BlueNorthModelStoreContainer.PrimaryDataValue")
            {
                return GetView52();
            }

            if (extentName == "BlueNorthModelStoreContainer.IndicatorIndicators_FrameworkFrameworks")
            {
                return GetView53();
            }

            if (extentName == "BlueNorthModelStoreContainer.PrimaryDataFieldPrimaryDataFields_IndicatorIndicators")
            {
                return GetView54();
            }

            if (extentName == "BlueNorthModelStoreContainer.PrimaryDataFieldNote")
            {
                return GetView55();
            }

            if (extentName == "BlueNorthModelStoreContainer.ProductionArea")
            {
                return GetView56();
            }

            if (extentName == "BlueNorthModelStoreContainer.UnitUnits_CommodityCommodities")
            {
                return GetView57();
            }

            if (extentName == "BlueNorthModelStoreContainer.UserUsers_IndicatorIndicators")
            {
                return GetView58();
            }

            if (extentName == "BlueNorthModelStoreContainer.PrimaryDataField")
            {
                return GetView59();
            }

            if (extentName == "BlueNorthModelStoreContainer.CommodityPDValue")
            {
                return GetView60();
            }

            if (extentName == "BlueNorthModelStoreContainer.DataFieldCategory")
            {
                return GetView61();
            }

            if (extentName == "BlueNorthModelStoreContainer.StandardContentStandardContents_QuestionGroupQuestionGroups")
            {
                return GetView62();
            }

            if (extentName == "BlueNorthModelStoreContainer.IndicatorIndicators_ConversionFactorConversionFactors")
            {
                return GetView63();
            }

            if (extentName == "BlueNorthModelStoreContainer.XPObjectType")
            {
                return GetView64();
            }

            if (extentName == "BlueNorthModelStoreContainer.UnitCharacteristicScore")
            {
                return GetView65();
            }

            if (extentName == "BlueNorthModelStoreContainer.User")
            {
                return GetView66();
            }

            if (extentName == "BlueNorthModelStoreContainer.FileData")
            {
                return GetView67();
            }

            if (extentName == "BlueNorthModelStoreContainer.PrimaryDataFieldUserEditMode")
            {
                return GetView68();
            }

            if (extentName == "BlueNorthModelStoreContainer.StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems")
            {
                return GetView69();
            }

            if (extentName == "BlueNorthModelStoreContainer.UserAssignedForUsers_UnitAssignedUnits")
            {
                return GetView70();
            }

            if (extentName == "BlueNorthModelStoreContainer.UserCreatedByUsers_UnitCreatedUnits")
            {
                return GetView71();
            }

            if (extentName == "BlueNorthModelStoreContainer.AnswerNote")
            {
                return GetView72();
            }

            if (extentName == "BlueNorthModelStoreContainer.AnswerNoteAttachment")
            {
                return GetView73();
            }

            if (extentName == "BlueNorthModelStoreContainer.ConversionFactor")
            {
                return GetView74();
            }

            if (extentName == "BlueNorthModelStoreContainer.Indicator")
            {
                return GetView75();
            }

            if (extentName == "BlueNorthModelStoreContainer.Principle")
            {
                return GetView76();
            }

            if (extentName == "BlueNorthModelStoreContainer.UnitSecondaryUnits_CommoditySecondaryCommodities")
            {
                return GetView77();
            }

            if (extentName == "BlueNorthModelStoreContainer.ImprovementPlanItem")
            {
                return GetView78();
            }

            if (extentName == "BlueNorthModelStoreContainer.FrameworkFrontMenuItem")
            {
                return GetView79();
            }

            if (extentName == "BlueNorthModelStoreContainer.FrontMenuItem")
            {
                return GetView80();
            }

            if (extentName == "BlueNorthModelStoreContainer.PrimaryDataMonthValue")
            {
                return GetView81();
            }

            if (extentName == "BlueNorthModelStoreContainer.Commodity")
            {
                return GetView82();
            }

            if (extentName == "BlueNorthModelStoreContainer.CommodityPDMValue")
            {
                return GetView83();
            }

            if (extentName == "BlueNorthEntities.Addresses")
            {
                return GetView84();
            }

            if (extentName == "BlueNorthEntities.CharacteristicGuidanceNotes")
            {
                return GetView85();
            }

            if (extentName == "BlueNorthEntities.CommodityCategories")
            {
                return GetView86();
            }

            if (extentName == "BlueNorthEntities.CommodityIndicatorGuidances")
            {
                return GetView87();
            }

            if (extentName == "BlueNorthEntities.Countries")
            {
                return GetView88();
            }

            if (extentName == "BlueNorthEntities.Dimensions")
            {
                return GetView89();
            }

            if (extentName == "BlueNorthEntities.Grades")
            {
                return GetView90();
            }

            if (extentName == "BlueNorthEntities.Organizations")
            {
                return GetView91();
            }

            if (extentName == "BlueNorthEntities.Parties")
            {
                return GetView92();
            }

            if (extentName == "BlueNorthEntities.PermissionPolicyUsers")
            {
                return GetView93();
            }

            if (extentName == "BlueNorthEntities.People")
            {
                return GetView94();
            }

            if (extentName == "BlueNorthEntities.PhoneNumbers")
            {
                return GetView95();
            }

            if (extentName == "BlueNorthEntities.PrincipleGroups")
            {
                return GetView96();
            }

            if (extentName == "BlueNorthEntities.QuestionGroups")
            {
                return GetView97();
            }

            if (extentName == "BlueNorthEntities.Retailers")
            {
                return GetView98();
            }

            if (extentName == "BlueNorthEntities.Standards")
            {
                return GetView99();
            }

            if (extentName == "BlueNorthEntities.StandardChapters")
            {
                return GetView100();
            }

            if (extentName == "BlueNorthEntities.StandardContents")
            {
                return GetView101();
            }

            if (extentName == "BlueNorthEntities.StandardStandards_CommodityCommodities")
            {
                return GetView102();
            }

            if (extentName == "BlueNorthEntities.Suppliers")
            {
                return GetView103();
            }

            if (extentName == "BlueNorthEntities.SupplierSuppliers_CommodityCommodities")
            {
                return GetView104();
            }

            if (extentName == "BlueNorthEntities.Units")
            {
                return GetView105();
            }

            if (extentName == "BlueNorthEntities.UnitOfMeasures")
            {
                return GetView106();
            }

            if (extentName == "BlueNorthEntities.UnitTypes")
            {
                return GetView107();
            }

            if (extentName == "BlueNorthEntities.Versions")
            {
                return GetView108();
            }

            if (extentName == "BlueNorthEntities.Organisations")
            {
                return GetView109();
            }

            if (extentName == "BlueNorthEntities.PermissionPolicyRoles")
            {
                return GetView110();
            }

            if (extentName == "BlueNorthEntities.PermissionPolicyUserUsers_PermissionPolicyRoleRoles")
            {
                return GetView111();
            }

            if (extentName == "BlueNorthEntities.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles")
            {
                return GetView112();
            }

            if (extentName == "BlueNorthEntities.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users")
            {
                return GetView113();
            }

            if (extentName == "BlueNorthEntities.CommodityCommodities_CharacteristicCharacteristics")
            {
                return GetView114();
            }

            if (extentName == "BlueNorthEntities.DimensionDimensions_CommodityCommodities")
            {
                return GetView115();
            }

            if (extentName == "BlueNorthEntities.PrinciplePrinciples_CommodityCommodities")
            {
                return GetView116();
            }

            if (extentName == "BlueNorthEntities.SupplierRetailers_RetailerSuppliers")
            {
                return GetView117();
            }

            if (extentName == "BlueNorthEntities.UnitUnits_RetailerRetailers")
            {
                return GetView118();
            }

            if (extentName == "BlueNorthEntities.UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields")
            {
                return GetView119();
            }

            if (extentName == "BlueNorthEntities.PrimaryDataTypes")
            {
                return GetView120();
            }

            if (extentName == "BlueNorthEntities.OrganisationTypes")
            {
                return GetView121();
            }

            if (extentName == "BlueNorthEntities.SPADataSets")
            {
                return GetView122();
            }

            if (extentName == "BlueNorthEntities.Questions")
            {
                return GetView123();
            }

            if (extentName == "BlueNorthEntities.IndicatorDataSets")
            {
                return GetView124();
            }

            if (extentName == "BlueNorthEntities.Characteristics")
            {
                return GetView125();
            }

            if (extentName == "BlueNorthEntities.Answers")
            {
                return GetView126();
            }

            if (extentName == "BlueNorthEntities.SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics")
            {
                return GetView127();
            }

            if (extentName == "BlueNorthEntities.QuestionGroupQuestionGroups_CharacteristicCharacteristics")
            {
                return GetView128();
            }

            if (extentName == "BlueNorthEntities.QuestionQuestions_CharacteristicCharacteristics")
            {
                return GetView129();
            }

            if (extentName == "BlueNorthEntities.FrameworkFrameworks_CharacteristicCharacteristics")
            {
                return GetView130();
            }

            if (extentName == "BlueNorthEntities.FrameworkFrameworks_CommodityCommodities")
            {
                return GetView131();
            }

            if (extentName == "BlueNorthEntities.Scorings")
            {
                return GetView132();
            }

            if (extentName == "BlueNorthEntities.StandardContentStandardContents_CharacteristicCharacteristics")
            {
                return GetView133();
            }

            if (extentName == "BlueNorthEntities.UnitUnits_StandardStandards")
            {
                return GetView134();
            }

            if (extentName == "BlueNorthEntities.Frameworks")
            {
                return GetView135();
            }

            if (extentName == "BlueNorthEntities.UnitUnits_SupplierSuppliers")
            {
                return GetView136();
            }

            if (extentName == "BlueNorthEntities.PriorCharacteristics")
            {
                return GetView137();
            }

            if (extentName == "BlueNorthEntities.PrimaryDataValues")
            {
                return GetView138();
            }

            if (extentName == "BlueNorthEntities.IndicatorIndicators_FrameworkFrameworks")
            {
                return GetView139();
            }

            if (extentName == "BlueNorthEntities.PrimaryDataFieldPrimaryDataFields_IndicatorIndicators")
            {
                return GetView140();
            }

            if (extentName == "BlueNorthEntities.PrimaryDataFieldNotes")
            {
                return GetView141();
            }

            if (extentName == "BlueNorthEntities.ProductionAreas")
            {
                return GetView142();
            }

            if (extentName == "BlueNorthEntities.UnitUnits_CommodityCommodities")
            {
                return GetView143();
            }

            if (extentName == "BlueNorthEntities.UserUsers_IndicatorIndicators")
            {
                return GetView144();
            }

            if (extentName == "BlueNorthEntities.PrimaryDataFields")
            {
                return GetView145();
            }

            if (extentName == "BlueNorthEntities.CommodityPDValues")
            {
                return GetView146();
            }

            if (extentName == "BlueNorthEntities.DataFieldCategories")
            {
                return GetView147();
            }

            if (extentName == "BlueNorthEntities.StandardContentStandardContents_QuestionGroupQuestionGroups")
            {
                return GetView148();
            }

            if (extentName == "BlueNorthEntities.IndicatorIndicators_ConversionFactorConversionFactors")
            {
                return GetView149();
            }

            if (extentName == "BlueNorthEntities.XPObjectTypes")
            {
                return GetView150();
            }

            if (extentName == "BlueNorthEntities.UnitCharacteristicScores")
            {
                return GetView151();
            }

            if (extentName == "BlueNorthEntities.Users")
            {
                return GetView152();
            }

            if (extentName == "BlueNorthEntities.FileDatas")
            {
                return GetView153();
            }

            if (extentName == "BlueNorthEntities.PrimaryDataFieldUserEditModes")
            {
                return GetView154();
            }

            if (extentName == "BlueNorthEntities.StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems")
            {
                return GetView155();
            }

            if (extentName == "BlueNorthEntities.UserAssignedForUsers_UnitAssignedUnits")
            {
                return GetView156();
            }

            if (extentName == "BlueNorthEntities.UserCreatedByUsers_UnitCreatedUnits")
            {
                return GetView157();
            }

            if (extentName == "BlueNorthEntities.AnswerNotes")
            {
                return GetView158();
            }

            if (extentName == "BlueNorthEntities.AnswerNoteAttachments")
            {
                return GetView159();
            }

            if (extentName == "BlueNorthEntities.ConversionFactors")
            {
                return GetView160();
            }

            if (extentName == "BlueNorthEntities.Indicators")
            {
                return GetView161();
            }

            if (extentName == "BlueNorthEntities.Principles")
            {
                return GetView162();
            }

            if (extentName == "BlueNorthEntities.UnitSecondaryUnits_CommoditySecondaryCommodities")
            {
                return GetView163();
            }

            if (extentName == "BlueNorthEntities.ImprovementPlanItems")
            {
                return GetView164();
            }

            if (extentName == "BlueNorthEntities.FrameworkFrontMenuItems")
            {
                return GetView165();
            }

            if (extentName == "BlueNorthEntities.FrontMenuItems")
            {
                return GetView166();
            }

            if (extentName == "BlueNorthEntities.PrimaryDataMonthValues")
            {
                return GetView167();
            }

            if (extentName == "BlueNorthEntities.Commodities")
            {
                return GetView168();
            }

            if (extentName == "BlueNorthEntities.CommodityPDMValues")
            {
                return GetView169();
            }

            if (extentName == "BlueNorthModelStoreContainer.StatusMatrix")
            {
                return GetView170();
            }

            if (extentName == "BlueNorthEntities.StatusMatrices")
            {
                return GetView171();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Address.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Address
        [BlueNorthModel.Store.Address](T1.Address_Oid, T1.Address_Street, T1.Address_City, T1.Address_StateProvince, T1.Address_ZipPostal, T1.Address_Country, T1.Address_OptimisticLockField, T1.Address_GCRecord)
    FROM (
        SELECT 
            T.Oid AS Address_Oid, 
            T.Street AS Address_Street, 
            T.City AS Address_City, 
            T.StateProvince AS Address_StateProvince, 
            T.ZipPostal AS Address_ZipPostal, 
            T.Country AS Address_Country, 
            T.OptimisticLockField AS Address_OptimisticLockField, 
            T.GCRecord AS Address_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.Addresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.CharacteristicGuidanceNote.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CharacteristicGuidanceNote
        [BlueNorthModel.Store.CharacteristicGuidanceNote](T1.CharacteristicGuidanceNote_OID, T1.CharacteristicGuidanceNote_Characteristic, T1.CharacteristicGuidanceNote_Text, T1.CharacteristicGuidanceNote_Markup, T1.CharacteristicGuidanceNote_Version, T1.CharacteristicGuidanceNote_OptimisticLockField, T1.CharacteristicGuidanceNote_GCRecord)
    FROM (
        SELECT 
            T.OID AS CharacteristicGuidanceNote_OID, 
            T.Characteristic AS CharacteristicGuidanceNote_Characteristic, 
            T.Text AS CharacteristicGuidanceNote_Text, 
            T.Markup AS CharacteristicGuidanceNote_Markup, 
            T.Version AS CharacteristicGuidanceNote_Version, 
            T.OptimisticLockField AS CharacteristicGuidanceNote_OptimisticLockField, 
            T.GCRecord AS CharacteristicGuidanceNote_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.CharacteristicGuidanceNotes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.CommodityCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityCategory
        [BlueNorthModel.Store.CommodityCategory](T1.CommodityCategory_OID, T1.CommodityCategory_Title, T1.CommodityCategory_Version, T1.CommodityCategory_OptimisticLockField, T1.CommodityCategory_GCRecord)
    FROM (
        SELECT 
            T.OID AS CommodityCategory_OID, 
            T.Title AS CommodityCategory_Title, 
            T.Version AS CommodityCategory_Version, 
            T.OptimisticLockField AS CommodityCategory_OptimisticLockField, 
            T.GCRecord AS CommodityCategory_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.CommodityCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.CommodityIndicatorGuidance.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityIndicatorGuidance
        [BlueNorthModel.Store.CommodityIndicatorGuidance](T1.CommodityIndicatorGuidance_OID, T1.CommodityIndicatorGuidance_Commodity, T1.CommodityIndicatorGuidance_Indicator, T1.CommodityIndicatorGuidance_Guidance, T1.CommodityIndicatorGuidance_Version, T1.CommodityIndicatorGuidance_OptimisticLockField, T1.CommodityIndicatorGuidance_GCRecord)
    FROM (
        SELECT 
            T.OID AS CommodityIndicatorGuidance_OID, 
            T.Commodity AS CommodityIndicatorGuidance_Commodity, 
            T.Indicator AS CommodityIndicatorGuidance_Indicator, 
            T.Guidance AS CommodityIndicatorGuidance_Guidance, 
            T.Version AS CommodityIndicatorGuidance_Version, 
            T.OptimisticLockField AS CommodityIndicatorGuidance_OptimisticLockField, 
            T.GCRecord AS CommodityIndicatorGuidance_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.CommodityIndicatorGuidances AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Country.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Country
        [BlueNorthModel.Store.Country](T1.Country_Oid, T1.Country_Name, T1.Country_PhoneCode, T1.Country_OptimisticLockField, T1.Country_GCRecord)
    FROM (
        SELECT 
            T.Oid AS Country_Oid, 
            T.Name AS Country_Name, 
            T.PhoneCode AS Country_PhoneCode, 
            T.OptimisticLockField AS Country_OptimisticLockField, 
            T.GCRecord AS Country_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.Countries AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Dimension.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Dimension
        [BlueNorthModel.Store.Dimension](T1.Dimension_OID, T1.Dimension_Title, T1.Dimension_Reference, T1.Dimension_ShortTitle, T1.Dimension_Description, T1.Dimension_GuidanceText, T1.Dimension_Version, T1.Dimension_OptimisticLockField, T1.Dimension_GCRecord, T1.Dimension_Color)
    FROM (
        SELECT 
            T.OID AS Dimension_OID, 
            T.Title AS Dimension_Title, 
            T.Reference AS Dimension_Reference, 
            T.ShortTitle AS Dimension_ShortTitle, 
            T.Description AS Dimension_Description, 
            T.GuidanceText AS Dimension_GuidanceText, 
            T.Version AS Dimension_Version, 
            T.OptimisticLockField AS Dimension_OptimisticLockField, 
            T.GCRecord AS Dimension_GCRecord, 
            T.Color AS Dimension_Color, 
            True AS _from0
        FROM BlueNorthEntities.Dimensions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Grade.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Grade
        [BlueNorthModel.Store.Grade](T1.Grade_OID, T1.Grade_Title, T1.Grade_ShortTitle, T1.Grade_Version, T1.Grade_OptimisticLockField, T1.Grade_GCRecord)
    FROM (
        SELECT 
            T.OID AS Grade_OID, 
            T.Title AS Grade_Title, 
            T.ShortTitle AS Grade_ShortTitle, 
            T.Version AS Grade_Version, 
            T.OptimisticLockField AS Grade_OptimisticLockField, 
            T.GCRecord AS Grade_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.Grades AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Organization.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Organization
        [BlueNorthModel.Store.Organization](T1.Organization_Oid, T1.Organization_FullName, T1.Organization_Profile, T1.Organization_Email, T1.Organization_WebSite, T1.Organization_Description, T1.Organization_Name)
    FROM (
        SELECT 
            T.Oid AS Organization_Oid, 
            T.FullName AS Organization_FullName, 
            T.Profile AS Organization_Profile, 
            T.Email AS Organization_Email, 
            T.WebSite AS Organization_WebSite, 
            T.Description AS Organization_Description, 
            T.Name AS Organization_Name, 
            True AS _from0
        FROM BlueNorthEntities.Organizations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Party.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Party
        [BlueNorthModel.Store.Party](T1.Party_Oid, T1.Party_Photo, T1.Party_Address1, T1.Party_Address2, T1.Party_OptimisticLockField, T1.Party_GCRecord, T1.Party_ObjectType)
    FROM (
        SELECT 
            T.Oid AS Party_Oid, 
            T.Photo AS Party_Photo, 
            T.Address1 AS Party_Address1, 
            T.Address2 AS Party_Address2, 
            T.OptimisticLockField AS Party_OptimisticLockField, 
            T.GCRecord AS Party_GCRecord, 
            T.ObjectType AS Party_ObjectType, 
            True AS _from0
        FROM BlueNorthEntities.Parties AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PermissionPolicyUser.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PermissionPolicyUser
        [BlueNorthModel.Store.PermissionPolicyUser](T1.PermissionPolicyUser_Oid, T1.PermissionPolicyUser_StoredPassword, T1.PermissionPolicyUser_ChangePasswordOnFirstLogon, T1.PermissionPolicyUser_UserName, T1.PermissionPolicyUser_IsActive, T1.PermissionPolicyUser_OptimisticLockField, T1.PermissionPolicyUser_GCRecord, T1.PermissionPolicyUser_ObjectType)
    FROM (
        SELECT 
            T.Oid AS PermissionPolicyUser_Oid, 
            T.StoredPassword AS PermissionPolicyUser_StoredPassword, 
            T.ChangePasswordOnFirstLogon AS PermissionPolicyUser_ChangePasswordOnFirstLogon, 
            T.UserName AS PermissionPolicyUser_UserName, 
            T.IsActive AS PermissionPolicyUser_IsActive, 
            T.OptimisticLockField AS PermissionPolicyUser_OptimisticLockField, 
            T.GCRecord AS PermissionPolicyUser_GCRecord, 
            T.ObjectType AS PermissionPolicyUser_ObjectType, 
            True AS _from0
        FROM BlueNorthEntities.PermissionPolicyUsers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Person.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person
        [BlueNorthModel.Store.Person](T1.Person_Oid, T1.Person_FirstName, T1.Person_LastName, T1.Person_MiddleName, T1.Person_Birthday, T1.Person_Email)
    FROM (
        SELECT 
            T.Oid AS Person_Oid, 
            T.FirstName AS Person_FirstName, 
            T.LastName AS Person_LastName, 
            T.MiddleName AS Person_MiddleName, 
            T.Birthday AS Person_Birthday, 
            T.Email AS Person_Email, 
            True AS _from0
        FROM BlueNorthEntities.People AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PhoneNumber.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PhoneNumber
        [BlueNorthModel.Store.PhoneNumber](T1.PhoneNumber_Oid, T1.PhoneNumber_Number, T1.PhoneNumber_Party, T1.PhoneNumber_PhoneType, T1.PhoneNumber_OptimisticLockField, T1.PhoneNumber_GCRecord)
    FROM (
        SELECT 
            T.Oid AS PhoneNumber_Oid, 
            T.Number AS PhoneNumber_Number, 
            T.Party AS PhoneNumber_Party, 
            T.PhoneType AS PhoneNumber_PhoneType, 
            T.OptimisticLockField AS PhoneNumber_OptimisticLockField, 
            T.GCRecord AS PhoneNumber_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.PhoneNumbers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PrincipleGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrincipleGroup
        [BlueNorthModel.Store.PrincipleGroup](T1.PrincipleGroup_OID, T1.PrincipleGroup_Title, T1.PrincipleGroup_ShortTitle, T1.PrincipleGroup_Version, T1.PrincipleGroup_OptimisticLockField, T1.PrincipleGroup_GCRecord, T1.PrincipleGroup_Order)
    FROM (
        SELECT 
            T.OID AS PrincipleGroup_OID, 
            T.Title AS PrincipleGroup_Title, 
            T.ShortTitle AS PrincipleGroup_ShortTitle, 
            T.Version AS PrincipleGroup_Version, 
            T.OptimisticLockField AS PrincipleGroup_OptimisticLockField, 
            T.GCRecord AS PrincipleGroup_GCRecord, 
            T.[Order] AS PrincipleGroup_Order, 
            True AS _from0
        FROM BlueNorthEntities.PrincipleGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.QuestionGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing QuestionGroup
        [BlueNorthModel.Store.QuestionGroup](T1.QuestionGroup_OID, T1.QuestionGroup_Title, T1.QuestionGroup_ShortTitle, T1.QuestionGroup_Parent, T1.QuestionGroup_Version, T1.QuestionGroup_OptimisticLockField, T1.QuestionGroup_GCRecord, T1.QuestionGroup_GuidanceText)
    FROM (
        SELECT 
            T.OID AS QuestionGroup_OID, 
            T.Title AS QuestionGroup_Title, 
            T.ShortTitle AS QuestionGroup_ShortTitle, 
            T.Parent AS QuestionGroup_Parent, 
            T.Version AS QuestionGroup_Version, 
            T.OptimisticLockField AS QuestionGroup_OptimisticLockField, 
            T.GCRecord AS QuestionGroup_GCRecord, 
            T.GuidanceText AS QuestionGroup_GuidanceText, 
            True AS _from0
        FROM BlueNorthEntities.QuestionGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Retailer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Retailer
        [BlueNorthModel.Store.Retailer](T1.Retailer_OID, T1.Retailer_Title, T1.Retailer_ShortTitle, T1.Retailer_Description, T1.Retailer_Image, T1.Retailer_Version, T1.Retailer_OptimisticLockField, T1.Retailer_GCRecord)
    FROM (
        SELECT 
            T.OID AS Retailer_OID, 
            T.Title AS Retailer_Title, 
            T.ShortTitle AS Retailer_ShortTitle, 
            T.Description AS Retailer_Description, 
            T.Image AS Retailer_Image, 
            T.Version AS Retailer_Version, 
            T.OptimisticLockField AS Retailer_OptimisticLockField, 
            T.GCRecord AS Retailer_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.Retailers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Standard.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Standard
        [BlueNorthModel.Store.Standard](T1.Standard_OID, T1.Standard_Reference, T1.Standard_Title, T1.Standard_ShortTitle, T1.Standard_Description, T1.Standard_Edition, T1.Standard_Version, T1.Standard_OptimisticLockField, T1.Standard_GCRecord, T1.Standard_LogoImage)
    FROM (
        SELECT 
            T.OID AS Standard_OID, 
            T.Reference AS Standard_Reference, 
            T.Title AS Standard_Title, 
            T.ShortTitle AS Standard_ShortTitle, 
            T.Description AS Standard_Description, 
            T.Edition AS Standard_Edition, 
            T.Version AS Standard_Version, 
            T.OptimisticLockField AS Standard_OptimisticLockField, 
            T.GCRecord AS Standard_GCRecord, 
            T.LogoImage AS Standard_LogoImage, 
            True AS _from0
        FROM BlueNorthEntities.Standards AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.StandardChapter.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardChapter
        [BlueNorthModel.Store.StandardChapter](T1.StandardChapter_OID, T1.StandardChapter_Title, T1.StandardChapter_ShortTitle, T1.StandardChapter_Reference, T1.StandardChapter_Standard, T1.StandardChapter_Parent, T1.StandardChapter_Version, T1.StandardChapter_OptimisticLockField, T1.StandardChapter_GCRecord)
    FROM (
        SELECT 
            T.OID AS StandardChapter_OID, 
            T.Title AS StandardChapter_Title, 
            T.ShortTitle AS StandardChapter_ShortTitle, 
            T.Reference AS StandardChapter_Reference, 
            T.Standard AS StandardChapter_Standard, 
            T.Parent AS StandardChapter_Parent, 
            T.Version AS StandardChapter_Version, 
            T.OptimisticLockField AS StandardChapter_OptimisticLockField, 
            T.GCRecord AS StandardChapter_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.StandardChapters AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.StandardContent.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardContent
        [BlueNorthModel.Store.StandardContent](T1.StandardContent_OID, T1.StandardContent_Title, T1.StandardContent_Reference, T1.StandardContent_Description, T1.StandardContent_StandardChapter, T1.StandardContent_Version, T1.StandardContent_OptimisticLockField, T1.StandardContent_GCRecord)
    FROM (
        SELECT 
            T.OID AS StandardContent_OID, 
            T.Title AS StandardContent_Title, 
            T.Reference AS StandardContent_Reference, 
            T.Description AS StandardContent_Description, 
            T.StandardChapter AS StandardContent_StandardChapter, 
            T.Version AS StandardContent_Version, 
            T.OptimisticLockField AS StandardContent_OptimisticLockField, 
            T.GCRecord AS StandardContent_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.StandardContents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.StandardStandards_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardStandards_CommodityCommodities
        [BlueNorthModel.Store.StandardStandards_CommodityCommodities](T1.[StandardStandards_CommodityCommodities.Commodities], T1.[StandardStandards_CommodityCommodities.Standards], T1.[StandardStandards_CommodityCommodities.OID], T1.[StandardStandards_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [StandardStandards_CommodityCommodities.Commodities], 
            T.Standards AS [StandardStandards_CommodityCommodities.Standards], 
            T.OID AS [StandardStandards_CommodityCommodities.OID], 
            T.OptimisticLockField AS [StandardStandards_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.StandardStandards_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Supplier.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Supplier
        [BlueNorthModel.Store.Supplier](T1.Supplier_OID, T1.Supplier_Title, T1.Supplier_ShortTitle, T1.Supplier_Description, T1.Supplier_Image, T1.Supplier_Version, T1.Supplier_OptimisticLockField, T1.Supplier_GCRecord)
    FROM (
        SELECT 
            T.OID AS Supplier_OID, 
            T.Title AS Supplier_Title, 
            T.ShortTitle AS Supplier_ShortTitle, 
            T.Description AS Supplier_Description, 
            T.Image AS Supplier_Image, 
            T.Version AS Supplier_Version, 
            T.OptimisticLockField AS Supplier_OptimisticLockField, 
            T.GCRecord AS Supplier_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.Suppliers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.SupplierSuppliers_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SupplierSuppliers_CommodityCommodities
        [BlueNorthModel.Store.SupplierSuppliers_CommodityCommodities](T1.[SupplierSuppliers_CommodityCommodities.Commodities], T1.[SupplierSuppliers_CommodityCommodities.Suppliers], T1.[SupplierSuppliers_CommodityCommodities.OID], T1.[SupplierSuppliers_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [SupplierSuppliers_CommodityCommodities.Commodities], 
            T.Suppliers AS [SupplierSuppliers_CommodityCommodities.Suppliers], 
            T.OID AS [SupplierSuppliers_CommodityCommodities.OID], 
            T.OptimisticLockField AS [SupplierSuppliers_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.SupplierSuppliers_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Unit.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Unit
        [BlueNorthModel.Store.Unit](T1.Unit_Oid, T1.Unit_UnitType, T1.Unit_Organisation, T1.Unit_ContactPerson, T1.Unit_UnitStructure, T1.Unit_PrimaryCommodity, T1.Unit_LocationLongtitude, T1.Unit_LocationLattitude, T1.Unit_CurrentAssessmentType, T1.Unit_PrimaryFramework)
    FROM (
        SELECT 
            T.Oid AS Unit_Oid, 
            T.UnitType AS Unit_UnitType, 
            T.Organisation AS Unit_Organisation, 
            T.ContactPerson AS Unit_ContactPerson, 
            T.UnitStructure AS Unit_UnitStructure, 
            T.PrimaryCommodity AS Unit_PrimaryCommodity, 
            T.LocationLongtitude AS Unit_LocationLongtitude, 
            T.LocationLattitude AS Unit_LocationLattitude, 
            T.CurrentAssessmentType AS Unit_CurrentAssessmentType, 
            T.PrimaryFramework AS Unit_PrimaryFramework, 
            True AS _from0
        FROM BlueNorthEntities.Units AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UnitOfMeasure.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitOfMeasure
        [BlueNorthModel.Store.UnitOfMeasure](T1.UnitOfMeasure_OID, T1.UnitOfMeasure_Title, T1.UnitOfMeasure_ShortTitle, T1.UnitOfMeasure_Symbol, T1.UnitOfMeasure_Version, T1.UnitOfMeasure_OptimisticLockField, T1.UnitOfMeasure_GCRecord)
    FROM (
        SELECT 
            T.OID AS UnitOfMeasure_OID, 
            T.Title AS UnitOfMeasure_Title, 
            T.ShortTitle AS UnitOfMeasure_ShortTitle, 
            T.Symbol AS UnitOfMeasure_Symbol, 
            T.Version AS UnitOfMeasure_Version, 
            T.OptimisticLockField AS UnitOfMeasure_OptimisticLockField, 
            T.GCRecord AS UnitOfMeasure_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.UnitOfMeasures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UnitType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitType
        [BlueNorthModel.Store.UnitType](T1.UnitType_OID, T1.UnitType_Name, T1.UnitType_Version, T1.UnitType_OptimisticLockField, T1.UnitType_GCRecord)
    FROM (
        SELECT 
            T.OID AS UnitType_OID, 
            T.Name AS UnitType_Name, 
            T.Version AS UnitType_Version, 
            T.OptimisticLockField AS UnitType_OptimisticLockField, 
            T.GCRecord AS UnitType_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.UnitTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Version.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Version
        [BlueNorthModel.Store.Version](T1.Version_OID, T1.Version_Name, T1.Version_Created, T1.Version_CreatedBy, T1.Version_Modified, T1.Version_ModifiedBy, T1.Version_Deleted, T1.Version_Published, T1.Version_OptimisticLockField, T1.Version_GCRecord)
    FROM (
        SELECT 
            T.OID AS Version_OID, 
            T.Name AS Version_Name, 
            T.Created AS Version_Created, 
            T.CreatedBy AS Version_CreatedBy, 
            T.Modified AS Version_Modified, 
            T.ModifiedBy AS Version_ModifiedBy, 
            T.Deleted AS Version_Deleted, 
            T.Published AS Version_Published, 
            T.OptimisticLockField AS Version_OptimisticLockField, 
            T.GCRecord AS Version_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.Versions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Organisation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Organisation
        [BlueNorthModel.Store.Organisation](T1.Organisation_Oid, T1.Organisation_UnitsCountLimit)
    FROM (
        SELECT 
            T.Oid AS Organisation_Oid, 
            T.UnitsCountLimit AS Organisation_UnitsCountLimit, 
            True AS _from0
        FROM BlueNorthEntities.Organisations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PermissionPolicyRole.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PermissionPolicyRole
        [BlueNorthModel.Store.PermissionPolicyRole](T1.PermissionPolicyRole_Oid, T1.PermissionPolicyRole_Name, T1.PermissionPolicyRole_IsAdministrative, T1.PermissionPolicyRole_CanEditModel, T1.PermissionPolicyRole_PermissionPolicy, T1.PermissionPolicyRole_OptimisticLockField, T1.PermissionPolicyRole_GCRecord, T1.PermissionPolicyRole_ObjectType)
    FROM (
        SELECT 
            T.Oid AS PermissionPolicyRole_Oid, 
            T.Name AS PermissionPolicyRole_Name, 
            T.IsAdministrative AS PermissionPolicyRole_IsAdministrative, 
            T.CanEditModel AS PermissionPolicyRole_CanEditModel, 
            T.PermissionPolicy AS PermissionPolicyRole_PermissionPolicy, 
            T.OptimisticLockField AS PermissionPolicyRole_OptimisticLockField, 
            T.GCRecord AS PermissionPolicyRole_GCRecord, 
            T.ObjectType AS PermissionPolicyRole_ObjectType, 
            True AS _from0
        FROM BlueNorthEntities.PermissionPolicyRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PermissionPolicyUserUsers_PermissionPolicyRoleRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PermissionPolicyUserUsers_PermissionPolicyRoleRoles
        [BlueNorthModel.Store.PermissionPolicyUserUsers_PermissionPolicyRoleRoles](T4.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.Roles], T4.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.Users], T4.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID], T4.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OptimisticLockField])
    FROM (
        SELECT T2.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.Roles], T3.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.Users], T1.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID], T1.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OptimisticLockField], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, (T3._from2 AND T3._from2 IS NOT NULL) AS _from2
        FROM  (
            SELECT 
                T.OID AS [PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID], 
                T.OptimisticLockField AS [PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OptimisticLockField], 
                True AS _from0
            FROM BlueNorthEntities.PermissionPolicyUserUsers_PermissionPolicyRoleRoles AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.PermissionPolicyRole).Oid AS [PermissionPolicyUserUsers_PermissionPolicyRoleRoles.Roles], 
                Key(T.PermissionPolicyUserUsers_PermissionPolicyRoleRoles).OID AS [PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID], 
                True AS _from1
            FROM BlueNorthEntities.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles AS T) AS T2
            ON T1.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID] = T2.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID]
            LEFT OUTER JOIN (
            SELECT 
                Key(T.PermissionPolicyUser).Oid AS [PermissionPolicyUserUsers_PermissionPolicyRoleRoles.Users], 
                Key(T.PermissionPolicyUserUsers_PermissionPolicyRoleRoles).OID AS [PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID], 
                True AS _from2
            FROM BlueNorthEntities.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users AS T) AS T3
            ON T1.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID] = T3.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID]
    ) AS T4");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.CommodityCommodities_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityCommodities_CharacteristicCharacteristics
        [BlueNorthModel.Store.CommodityCommodities_CharacteristicCharacteristics](T1.[CommodityCommodities_CharacteristicCharacteristics.Characteristics], T1.[CommodityCommodities_CharacteristicCharacteristics.Commodities], T1.[CommodityCommodities_CharacteristicCharacteristics.OID], T1.[CommodityCommodities_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [CommodityCommodities_CharacteristicCharacteristics.Characteristics], 
            T.Commodities AS [CommodityCommodities_CharacteristicCharacteristics.Commodities], 
            T.OID AS [CommodityCommodities_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [CommodityCommodities_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.CommodityCommodities_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.DimensionDimensions_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DimensionDimensions_CommodityCommodities
        [BlueNorthModel.Store.DimensionDimensions_CommodityCommodities](T1.[DimensionDimensions_CommodityCommodities.Commodities], T1.[DimensionDimensions_CommodityCommodities.Dimensions], T1.[DimensionDimensions_CommodityCommodities.OID], T1.[DimensionDimensions_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [DimensionDimensions_CommodityCommodities.Commodities], 
            T.Dimensions AS [DimensionDimensions_CommodityCommodities.Dimensions], 
            T.OID AS [DimensionDimensions_CommodityCommodities.OID], 
            T.OptimisticLockField AS [DimensionDimensions_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.DimensionDimensions_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PrinciplePrinciples_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrinciplePrinciples_CommodityCommodities
        [BlueNorthModel.Store.PrinciplePrinciples_CommodityCommodities](T1.[PrinciplePrinciples_CommodityCommodities.Commodities], T1.[PrinciplePrinciples_CommodityCommodities.Principles], T1.[PrinciplePrinciples_CommodityCommodities.OID], T1.[PrinciplePrinciples_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [PrinciplePrinciples_CommodityCommodities.Commodities], 
            T.Principles AS [PrinciplePrinciples_CommodityCommodities.Principles], 
            T.OID AS [PrinciplePrinciples_CommodityCommodities.OID], 
            T.OptimisticLockField AS [PrinciplePrinciples_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.PrinciplePrinciples_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.SupplierRetailers_RetailerSuppliers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SupplierRetailers_RetailerSuppliers
        [BlueNorthModel.Store.SupplierRetailers_RetailerSuppliers](T1.[SupplierRetailers_RetailerSuppliers.Suppliers], T1.[SupplierRetailers_RetailerSuppliers.Retailers], T1.[SupplierRetailers_RetailerSuppliers.OID], T1.[SupplierRetailers_RetailerSuppliers.OptimisticLockField])
    FROM (
        SELECT 
            T.Suppliers AS [SupplierRetailers_RetailerSuppliers.Suppliers], 
            T.Retailers AS [SupplierRetailers_RetailerSuppliers.Retailers], 
            T.OID AS [SupplierRetailers_RetailerSuppliers.OID], 
            T.OptimisticLockField AS [SupplierRetailers_RetailerSuppliers.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.SupplierRetailers_RetailerSuppliers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UnitUnits_RetailerRetailers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitUnits_RetailerRetailers
        [BlueNorthModel.Store.UnitUnits_RetailerRetailers](T1.[UnitUnits_RetailerRetailers.Retailers], T1.[UnitUnits_RetailerRetailers.Units], T1.[UnitUnits_RetailerRetailers.OID], T1.[UnitUnits_RetailerRetailers.OptimisticLockField])
    FROM (
        SELECT 
            T.Retailers AS [UnitUnits_RetailerRetailers.Retailers], 
            T.Units AS [UnitUnits_RetailerRetailers.Units], 
            T.OID AS [UnitUnits_RetailerRetailers.OID], 
            T.OptimisticLockField AS [UnitUnits_RetailerRetailers.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.UnitUnits_RetailerRetailers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields
        [BlueNorthModel.Store.UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields](T1.[UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.PrimaryDataFields], T1.[UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.UnitsOfMeasure], T1.[UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.OID], T1.[UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.OptimisticLockField])
    FROM (
        SELECT 
            T.PrimaryDataFields AS [UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.PrimaryDataFields], 
            T.UnitsOfMeasure AS [UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.UnitsOfMeasure], 
            T.OID AS [UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.OID], 
            T.OptimisticLockField AS [UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PrimaryDataType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataType
        [BlueNorthModel.Store.PrimaryDataType](T1.PrimaryDataType_OID, T1.PrimaryDataType_Title, T1.PrimaryDataType_ShortTitle, T1.PrimaryDataType_Version, T1.PrimaryDataType_OptimisticLockField, T1.PrimaryDataType_GCRecord, T1.PrimaryDataType_IsMapArea, T1.PrimaryDataType_IsBoolean, T1.PrimaryDataType_AreaSizeMode)
    FROM (
        SELECT 
            T.OID AS PrimaryDataType_OID, 
            T.Title AS PrimaryDataType_Title, 
            T.ShortTitle AS PrimaryDataType_ShortTitle, 
            T.Version AS PrimaryDataType_Version, 
            T.OptimisticLockField AS PrimaryDataType_OptimisticLockField, 
            T.GCRecord AS PrimaryDataType_GCRecord, 
            T.IsMapArea AS PrimaryDataType_IsMapArea, 
            T.IsBoolean AS PrimaryDataType_IsBoolean, 
            T.AreaSizeMode AS PrimaryDataType_AreaSizeMode, 
            True AS _from0
        FROM BlueNorthEntities.PrimaryDataTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.OrganisationType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OrganisationType
        [BlueNorthModel.Store.OrganisationType](T1.OrganisationType_OID, T1.OrganisationType_Title, T1.OrganisationType_ShortTitle, T1.OrganisationType_Version, T1.OrganisationType_OptimisticLockField, T1.OrganisationType_GCRecord)
    FROM (
        SELECT 
            T.OID AS OrganisationType_OID, 
            T.Title AS OrganisationType_Title, 
            T.ShortTitle AS OrganisationType_ShortTitle, 
            T.Version AS OrganisationType_Version, 
            T.OptimisticLockField AS OrganisationType_OptimisticLockField, 
            T.GCRecord AS OrganisationType_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.OrganisationTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.SPADataSet.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SPADataSet
        [BlueNorthModel.Store.SPADataSet](T1.SPADataSet_OID, T1.SPADataSet_Unit, T1.SPADataSet_AssessmentType, T1.SPADataSet_Grade, T1.SPADataSet_Comment, T1.SPADataSet_Created, T1.SPADataSet_Modified, T1.SPADataSet_OptimisticLockField, T1.SPADataSet_GCRecord, T1.SPADataSet_Framework)
    FROM (
        SELECT 
            T.OID AS SPADataSet_OID, 
            T.Unit AS SPADataSet_Unit, 
            T.AssessmentType AS SPADataSet_AssessmentType, 
            T.Grade AS SPADataSet_Grade, 
            T.Comment AS SPADataSet_Comment, 
            T.Created AS SPADataSet_Created, 
            T.Modified AS SPADataSet_Modified, 
            T.OptimisticLockField AS SPADataSet_OptimisticLockField, 
            T.GCRecord AS SPADataSet_GCRecord, 
            T.Framework AS SPADataSet_Framework, 
            True AS _from0
        FROM BlueNorthEntities.SPADataSets AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Question.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Question
        [BlueNorthModel.Store.Question](T1.Question_OID, T1.Question_Title, T1.Question_Reference, T1.Question_Version, T1.Question_OptimisticLockField, T1.Question_GCRecord, T1.Question_Group, T1.Question_GuidanceText, T1.Question_UnknownAnswerGuidance, T1.Question_NoAnswerGuidance, T1.Question_PartiallyAnswerGuidance, T1.Question_YesAnswerGuidance, T1.Question_DefaultAnswer, T1.Question_ImprovementPlanQuestion, T1.Question_ImprovementPlanGuidance)
    FROM (
        SELECT 
            T.OID AS Question_OID, 
            T.Title AS Question_Title, 
            T.Reference AS Question_Reference, 
            T.Version AS Question_Version, 
            T.OptimisticLockField AS Question_OptimisticLockField, 
            T.GCRecord AS Question_GCRecord, 
            T.[Group] AS Question_Group, 
            T.GuidanceText AS Question_GuidanceText, 
            T.UnknownAnswerGuidance AS Question_UnknownAnswerGuidance, 
            T.NoAnswerGuidance AS Question_NoAnswerGuidance, 
            T.PartiallyAnswerGuidance AS Question_PartiallyAnswerGuidance, 
            T.YesAnswerGuidance AS Question_YesAnswerGuidance, 
            T.DefaultAnswer AS Question_DefaultAnswer, 
            T.ImprovementPlanQuestion AS Question_ImprovementPlanQuestion, 
            T.ImprovementPlanGuidance AS Question_ImprovementPlanGuidance, 
            True AS _from0
        FROM BlueNorthEntities.Questions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.IndicatorDataSet.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IndicatorDataSet
        [BlueNorthModel.Store.IndicatorDataSet](T1.IndicatorDataSet_OID, T1.IndicatorDataSet_Unit, T1.IndicatorDataSet_Grade, T1.IndicatorDataSet_Comment, T1.IndicatorDataSet_Created, T1.IndicatorDataSet_Modified, T1.IndicatorDataSet_OptimisticLockField, T1.IndicatorDataSet_GCRecord, T1.IndicatorDataSet_PeriodFromYear, T1.IndicatorDataSet_PeriodToYear, T1.IndicatorDataSet_PeriodFromMonth, T1.IndicatorDataSet_PeriodToMonth, T1.IndicatorDataSet_Framework)
    FROM (
        SELECT 
            T.OID AS IndicatorDataSet_OID, 
            T.Unit AS IndicatorDataSet_Unit, 
            T.Grade AS IndicatorDataSet_Grade, 
            T.Comment AS IndicatorDataSet_Comment, 
            T.Created AS IndicatorDataSet_Created, 
            T.Modified AS IndicatorDataSet_Modified, 
            T.OptimisticLockField AS IndicatorDataSet_OptimisticLockField, 
            T.GCRecord AS IndicatorDataSet_GCRecord, 
            T.PeriodFromYear AS IndicatorDataSet_PeriodFromYear, 
            T.PeriodToYear AS IndicatorDataSet_PeriodToYear, 
            T.PeriodFromMonth AS IndicatorDataSet_PeriodFromMonth, 
            T.PeriodToMonth AS IndicatorDataSet_PeriodToMonth, 
            T.Framework AS IndicatorDataSet_Framework, 
            True AS _from0
        FROM BlueNorthEntities.IndicatorDataSets AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Characteristic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Characteristic
        [BlueNorthModel.Store.Characteristic](T1.Characteristic_OID, T1.Characteristic_Title, T1.Characteristic_ShortTitle, T1.Characteristic_Reference, T1.Characteristic_Description, T1.Characteristic_Summary, T1.Characteristic_GuidanceText, T1.Characteristic_Principle, T1.Characteristic_PrincipleGroup, T1.Characteristic_Version, T1.Characteristic_OptimisticLockField, T1.Characteristic_GCRecord, T1.Characteristic_CommodityCategory, T1.Characteristic_OrganisationType, T1.Characteristic_NonFulfilmentRisks)
    FROM (
        SELECT 
            T.OID AS Characteristic_OID, 
            T.Title AS Characteristic_Title, 
            T.ShortTitle AS Characteristic_ShortTitle, 
            T.Reference AS Characteristic_Reference, 
            T.Description AS Characteristic_Description, 
            T.Summary AS Characteristic_Summary, 
            T.GuidanceText AS Characteristic_GuidanceText, 
            T.Principle AS Characteristic_Principle, 
            T.PrincipleGroup AS Characteristic_PrincipleGroup, 
            T.Version AS Characteristic_Version, 
            T.OptimisticLockField AS Characteristic_OptimisticLockField, 
            T.GCRecord AS Characteristic_GCRecord, 
            T.CommodityCategory AS Characteristic_CommodityCategory, 
            T.OrganisationType AS Characteristic_OrganisationType, 
            T.NonFulfilmentRisks AS Characteristic_NonFulfilmentRisks, 
            True AS _from0
        FROM BlueNorthEntities.Characteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Answer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Answer
        [BlueNorthModel.Store.Answer](T1.Answer_OID, T1.Answer_User, T1.Answer_Created, T1.Answer_Modified, T1.Answer_OptimisticLockField, T1.Answer_GCRecord, T1.Answer_Question, T1.Answer_Choice, T1.Answer_DataSet, T1.Answer_Characteristic)
    FROM (
        SELECT 
            T.OID AS Answer_OID, 
            T.User AS Answer_User, 
            T.Created AS Answer_Created, 
            T.Modified AS Answer_Modified, 
            T.OptimisticLockField AS Answer_OptimisticLockField, 
            T.GCRecord AS Answer_GCRecord, 
            T.Question AS Answer_Question, 
            T.Choice AS Answer_Choice, 
            T.DataSet AS Answer_DataSet, 
            T.Characteristic AS Answer_Characteristic, 
            True AS _from0
        FROM BlueNorthEntities.Answers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics
        [BlueNorthModel.Store.SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics](T1.[SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.NonRelevantCharacteristics], T1.[SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.SPADataSets], T1.[SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.OID], T1.[SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.NonRelevantCharacteristics AS [SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.NonRelevantCharacteristics], 
            T.SPADataSets AS [SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.SPADataSets], 
            T.OID AS [SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.OID], 
            T.OptimisticLockField AS [SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.QuestionGroupQuestionGroups_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing QuestionGroupQuestionGroups_CharacteristicCharacteristics
        [BlueNorthModel.Store.QuestionGroupQuestionGroups_CharacteristicCharacteristics](T1.[QuestionGroupQuestionGroups_CharacteristicCharacteristics.Characteristics], T1.[QuestionGroupQuestionGroups_CharacteristicCharacteristics.QuestionGroups], T1.[QuestionGroupQuestionGroups_CharacteristicCharacteristics.OID], T1.[QuestionGroupQuestionGroups_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [QuestionGroupQuestionGroups_CharacteristicCharacteristics.Characteristics], 
            T.QuestionGroups AS [QuestionGroupQuestionGroups_CharacteristicCharacteristics.QuestionGroups], 
            T.OID AS [QuestionGroupQuestionGroups_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [QuestionGroupQuestionGroups_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.QuestionGroupQuestionGroups_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.QuestionQuestions_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing QuestionQuestions_CharacteristicCharacteristics
        [BlueNorthModel.Store.QuestionQuestions_CharacteristicCharacteristics](T1.[QuestionQuestions_CharacteristicCharacteristics.Characteristics], T1.[QuestionQuestions_CharacteristicCharacteristics.Questions], T1.[QuestionQuestions_CharacteristicCharacteristics.OID], T1.[QuestionQuestions_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [QuestionQuestions_CharacteristicCharacteristics.Characteristics], 
            T.Questions AS [QuestionQuestions_CharacteristicCharacteristics.Questions], 
            T.OID AS [QuestionQuestions_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [QuestionQuestions_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.QuestionQuestions_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.FrameworkFrameworks_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FrameworkFrameworks_CharacteristicCharacteristics
        [BlueNorthModel.Store.FrameworkFrameworks_CharacteristicCharacteristics](T1.[FrameworkFrameworks_CharacteristicCharacteristics.Characteristics], T1.[FrameworkFrameworks_CharacteristicCharacteristics.Frameworks], T1.[FrameworkFrameworks_CharacteristicCharacteristics.OID], T1.[FrameworkFrameworks_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [FrameworkFrameworks_CharacteristicCharacteristics.Characteristics], 
            T.Frameworks AS [FrameworkFrameworks_CharacteristicCharacteristics.Frameworks], 
            T.OID AS [FrameworkFrameworks_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [FrameworkFrameworks_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.FrameworkFrameworks_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.FrameworkFrameworks_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FrameworkFrameworks_CommodityCommodities
        [BlueNorthModel.Store.FrameworkFrameworks_CommodityCommodities](T1.[FrameworkFrameworks_CommodityCommodities.Commodities], T1.[FrameworkFrameworks_CommodityCommodities.Frameworks], T1.[FrameworkFrameworks_CommodityCommodities.OID], T1.[FrameworkFrameworks_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [FrameworkFrameworks_CommodityCommodities.Commodities], 
            T.Frameworks AS [FrameworkFrameworks_CommodityCommodities.Frameworks], 
            T.OID AS [FrameworkFrameworks_CommodityCommodities.OID], 
            T.OptimisticLockField AS [FrameworkFrameworks_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.FrameworkFrameworks_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Scoring.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Scoring
        [BlueNorthModel.Store.Scoring](T1.Scoring_OID, T1.Scoring_Characteristic, T1.Scoring_Commodity, T1.Scoring_Score, T1.Scoring_OptimisticLockField, T1.Scoring_GCRecord, T1.Scoring_UnitType)
    FROM (
        SELECT 
            T.OID AS Scoring_OID, 
            T.Characteristic AS Scoring_Characteristic, 
            T.Commodity AS Scoring_Commodity, 
            T.Score AS Scoring_Score, 
            T.OptimisticLockField AS Scoring_OptimisticLockField, 
            T.GCRecord AS Scoring_GCRecord, 
            T.UnitType AS Scoring_UnitType, 
            True AS _from0
        FROM BlueNorthEntities.Scorings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.StandardContentStandardContents_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardContentStandardContents_CharacteristicCharacteristics
        [BlueNorthModel.Store.StandardContentStandardContents_CharacteristicCharacteristics](T1.[StandardContentStandardContents_CharacteristicCharacteristics.Characteristics], T1.[StandardContentStandardContents_CharacteristicCharacteristics.StandardContents], T1.[StandardContentStandardContents_CharacteristicCharacteristics.OID], T1.[StandardContentStandardContents_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [StandardContentStandardContents_CharacteristicCharacteristics.Characteristics], 
            T.StandardContents AS [StandardContentStandardContents_CharacteristicCharacteristics.StandardContents], 
            T.OID AS [StandardContentStandardContents_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [StandardContentStandardContents_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.StandardContentStandardContents_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UnitUnits_StandardStandards.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitUnits_StandardStandards
        [BlueNorthModel.Store.UnitUnits_StandardStandards](T1.[UnitUnits_StandardStandards.Standards], T1.[UnitUnits_StandardStandards.Units], T1.[UnitUnits_StandardStandards.OID], T1.[UnitUnits_StandardStandards.OptimisticLockField])
    FROM (
        SELECT 
            T.Standards AS [UnitUnits_StandardStandards.Standards], 
            T.Units AS [UnitUnits_StandardStandards.Units], 
            T.OID AS [UnitUnits_StandardStandards.OID], 
            T.OptimisticLockField AS [UnitUnits_StandardStandards.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.UnitUnits_StandardStandards AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Framework.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Framework
        [BlueNorthModel.Store.Framework](T1.Framework_OID, T1.Framework_Title, T1.Framework_ShortTitle, T1.Framework_Version, T1.Framework_OptimisticLockField, T1.Framework_GCRecord, T1.Framework_OrganisationType, T1.Framework_ScoringMode)
    FROM (
        SELECT 
            T.OID AS Framework_OID, 
            T.Title AS Framework_Title, 
            T.ShortTitle AS Framework_ShortTitle, 
            T.Version AS Framework_Version, 
            T.OptimisticLockField AS Framework_OptimisticLockField, 
            T.GCRecord AS Framework_GCRecord, 
            T.OrganisationType AS Framework_OrganisationType, 
            T.ScoringMode AS Framework_ScoringMode, 
            True AS _from0
        FROM BlueNorthEntities.Frameworks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UnitUnits_SupplierSuppliers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitUnits_SupplierSuppliers
        [BlueNorthModel.Store.UnitUnits_SupplierSuppliers](T1.[UnitUnits_SupplierSuppliers.Suppliers], T1.[UnitUnits_SupplierSuppliers.Units], T1.[UnitUnits_SupplierSuppliers.OID], T1.[UnitUnits_SupplierSuppliers.OptimisticLockField])
    FROM (
        SELECT 
            T.Suppliers AS [UnitUnits_SupplierSuppliers.Suppliers], 
            T.Units AS [UnitUnits_SupplierSuppliers.Units], 
            T.OID AS [UnitUnits_SupplierSuppliers.OID], 
            T.OptimisticLockField AS [UnitUnits_SupplierSuppliers.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.UnitUnits_SupplierSuppliers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PriorCharacteristic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PriorCharacteristic
        [BlueNorthModel.Store.PriorCharacteristic](T1.PriorCharacteristic_OID, T1.PriorCharacteristic_DataSet, T1.PriorCharacteristic_Characteristic, T1.PriorCharacteristic_Order, T1.PriorCharacteristic_OptimisticLockField, T1.PriorCharacteristic_GCRecord)
    FROM (
        SELECT 
            T.OID AS PriorCharacteristic_OID, 
            T.DataSet AS PriorCharacteristic_DataSet, 
            T.Characteristic AS PriorCharacteristic_Characteristic, 
            T.[Order] AS PriorCharacteristic_Order, 
            T.OptimisticLockField AS PriorCharacteristic_OptimisticLockField, 
            T.GCRecord AS PriorCharacteristic_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.PriorCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PrimaryDataValue.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataValue
        [BlueNorthModel.Store.PrimaryDataValue](T1.PrimaryDataValue_OID, T1.PrimaryDataValue_PrimaryDataField, T1.PrimaryDataValue_DataSet, T1.PrimaryDataValue_Value, T1.PrimaryDataValue_Created, T1.PrimaryDataValue_Modified, T1.PrimaryDataValue_OptimisticLockField, T1.PrimaryDataValue_GCRecord)
    FROM (
        SELECT 
            T.OID AS PrimaryDataValue_OID, 
            T.PrimaryDataField AS PrimaryDataValue_PrimaryDataField, 
            T.DataSet AS PrimaryDataValue_DataSet, 
            T.[Value] AS PrimaryDataValue_Value, 
            T.Created AS PrimaryDataValue_Created, 
            T.Modified AS PrimaryDataValue_Modified, 
            T.OptimisticLockField AS PrimaryDataValue_OptimisticLockField, 
            T.GCRecord AS PrimaryDataValue_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.PrimaryDataValues AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.IndicatorIndicators_FrameworkFrameworks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IndicatorIndicators_FrameworkFrameworks
        [BlueNorthModel.Store.IndicatorIndicators_FrameworkFrameworks](T1.[IndicatorIndicators_FrameworkFrameworks.Frameworks], T1.[IndicatorIndicators_FrameworkFrameworks.Indicators], T1.[IndicatorIndicators_FrameworkFrameworks.OID], T1.[IndicatorIndicators_FrameworkFrameworks.OptimisticLockField])
    FROM (
        SELECT 
            T.Frameworks AS [IndicatorIndicators_FrameworkFrameworks.Frameworks], 
            T.Indicators AS [IndicatorIndicators_FrameworkFrameworks.Indicators], 
            T.OID AS [IndicatorIndicators_FrameworkFrameworks.OID], 
            T.OptimisticLockField AS [IndicatorIndicators_FrameworkFrameworks.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.IndicatorIndicators_FrameworkFrameworks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataFieldPrimaryDataFields_IndicatorIndicators
        [BlueNorthModel.Store.PrimaryDataFieldPrimaryDataFields_IndicatorIndicators](T1.[PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.Indicators], T1.[PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.PrimaryDataFields], T1.[PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.OID], T1.[PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.OptimisticLockField])
    FROM (
        SELECT 
            T.Indicators AS [PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.Indicators], 
            T.PrimaryDataFields AS [PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.PrimaryDataFields], 
            T.OID AS [PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.OID], 
            T.OptimisticLockField AS [PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.PrimaryDataFieldPrimaryDataFields_IndicatorIndicators AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PrimaryDataFieldNote.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataFieldNote
        [BlueNorthModel.Store.PrimaryDataFieldNote](T1.PrimaryDataFieldNote_OID, T1.PrimaryDataFieldNote_PrimaryDataField, T1.PrimaryDataFieldNote_DataSet, T1.PrimaryDataFieldNote_User, T1.PrimaryDataFieldNote_Note, T1.PrimaryDataFieldNote_Created, T1.PrimaryDataFieldNote_Modified, T1.PrimaryDataFieldNote_OptimisticLockField, T1.PrimaryDataFieldNote_GCRecord)
    FROM (
        SELECT 
            T.OID AS PrimaryDataFieldNote_OID, 
            T.PrimaryDataField AS PrimaryDataFieldNote_PrimaryDataField, 
            T.DataSet AS PrimaryDataFieldNote_DataSet, 
            T.User AS PrimaryDataFieldNote_User, 
            T.Note AS PrimaryDataFieldNote_Note, 
            T.Created AS PrimaryDataFieldNote_Created, 
            T.Modified AS PrimaryDataFieldNote_Modified, 
            T.OptimisticLockField AS PrimaryDataFieldNote_OptimisticLockField, 
            T.GCRecord AS PrimaryDataFieldNote_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.PrimaryDataFieldNotes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.ProductionArea.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductionArea
        [BlueNorthModel.Store.ProductionArea](T1.ProductionArea_OID, T1.ProductionArea_PrimaryDataValue, T1.ProductionArea_Name, T1.ProductionArea_DrawingData, T1.ProductionArea_Created, T1.ProductionArea_Modified, T1.ProductionArea_OptimisticLockField, T1.ProductionArea_GCRecord, T1.ProductionArea_Size)
    FROM (
        SELECT 
            T.OID AS ProductionArea_OID, 
            T.PrimaryDataValue AS ProductionArea_PrimaryDataValue, 
            T.Name AS ProductionArea_Name, 
            T.DrawingData AS ProductionArea_DrawingData, 
            T.Created AS ProductionArea_Created, 
            T.Modified AS ProductionArea_Modified, 
            T.OptimisticLockField AS ProductionArea_OptimisticLockField, 
            T.GCRecord AS ProductionArea_GCRecord, 
            T.Size AS ProductionArea_Size, 
            True AS _from0
        FROM BlueNorthEntities.ProductionAreas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UnitUnits_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitUnits_CommodityCommodities
        [BlueNorthModel.Store.UnitUnits_CommodityCommodities](T1.[UnitUnits_CommodityCommodities.Commodities], T1.[UnitUnits_CommodityCommodities.Units], T1.[UnitUnits_CommodityCommodities.OID], T1.[UnitUnits_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [UnitUnits_CommodityCommodities.Commodities], 
            T.Units AS [UnitUnits_CommodityCommodities.Units], 
            T.OID AS [UnitUnits_CommodityCommodities.OID], 
            T.OptimisticLockField AS [UnitUnits_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.UnitUnits_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UserUsers_IndicatorIndicators.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserUsers_IndicatorIndicators
        [BlueNorthModel.Store.UserUsers_IndicatorIndicators](T1.[UserUsers_IndicatorIndicators.Indicators], T1.[UserUsers_IndicatorIndicators.Users], T1.[UserUsers_IndicatorIndicators.OID], T1.[UserUsers_IndicatorIndicators.OptimisticLockField])
    FROM (
        SELECT 
            T.Indicators AS [UserUsers_IndicatorIndicators.Indicators], 
            T.Users AS [UserUsers_IndicatorIndicators.Users], 
            T.OID AS [UserUsers_IndicatorIndicators.OID], 
            T.OptimisticLockField AS [UserUsers_IndicatorIndicators.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.UserUsers_IndicatorIndicators AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PrimaryDataField.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView59()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataField
        [BlueNorthModel.Store.PrimaryDataField](T1.PrimaryDataField_OID, T1.PrimaryDataField_PrimaryDataType, T1.PrimaryDataField_GuidanceNotes, T1.PrimaryDataField_Notes, T1.PrimaryDataField_Version, T1.PrimaryDataField_OptimisticLockField, T1.PrimaryDataField_GCRecord, T1.PrimaryDataField_DefaultUOM, T1.PrimaryDataField_Reference, T1.PrimaryDataField_Name, T1.PrimaryDataField_Color, T1.PrimaryDataField_DependendOn, T1.PrimaryDataField_IsCommodityDependendent, T1.PrimaryDataField_Category, T1.PrimaryDataField_Order, T1.PrimaryDataField_IsMonthlyDataModeAvailable)
    FROM (
        SELECT 
            T.OID AS PrimaryDataField_OID, 
            T.PrimaryDataType AS PrimaryDataField_PrimaryDataType, 
            T.GuidanceNotes AS PrimaryDataField_GuidanceNotes, 
            T.Notes AS PrimaryDataField_Notes, 
            T.Version AS PrimaryDataField_Version, 
            T.OptimisticLockField AS PrimaryDataField_OptimisticLockField, 
            T.GCRecord AS PrimaryDataField_GCRecord, 
            T.DefaultUOM AS PrimaryDataField_DefaultUOM, 
            T.Reference AS PrimaryDataField_Reference, 
            T.Name AS PrimaryDataField_Name, 
            T.Color AS PrimaryDataField_Color, 
            T.DependendOn AS PrimaryDataField_DependendOn, 
            T.IsCommodityDependendent AS PrimaryDataField_IsCommodityDependendent, 
            T.Category AS PrimaryDataField_Category, 
            T.[Order] AS PrimaryDataField_Order, 
            T.IsMonthlyDataModeAvailable AS PrimaryDataField_IsMonthlyDataModeAvailable, 
            True AS _from0
        FROM BlueNorthEntities.PrimaryDataFields AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.CommodityPDValue.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView60()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityPDValue
        [BlueNorthModel.Store.CommodityPDValue](T1.CommodityPDValue_OID, T1.CommodityPDValue_PrimaryDataValue, T1.CommodityPDValue_Value, T1.CommodityPDValue_Created, T1.CommodityPDValue_Modified, T1.CommodityPDValue_OptimisticLockField, T1.CommodityPDValue_GCRecord, T1.CommodityPDValue_Commodity)
    FROM (
        SELECT 
            T.OID AS CommodityPDValue_OID, 
            T.PrimaryDataValue AS CommodityPDValue_PrimaryDataValue, 
            T.[Value] AS CommodityPDValue_Value, 
            T.Created AS CommodityPDValue_Created, 
            T.Modified AS CommodityPDValue_Modified, 
            T.OptimisticLockField AS CommodityPDValue_OptimisticLockField, 
            T.GCRecord AS CommodityPDValue_GCRecord, 
            T.Commodity AS CommodityPDValue_Commodity, 
            True AS _from0
        FROM BlueNorthEntities.CommodityPDValues AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.DataFieldCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView61()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DataFieldCategory
        [BlueNorthModel.Store.DataFieldCategory](T1.DataFieldCategory_OID, T1.DataFieldCategory_Title, T1.DataFieldCategory_ShortTitle, T1.DataFieldCategory_OptimisticLockField, T1.DataFieldCategory_GCRecord, T1.DataFieldCategory_Order)
    FROM (
        SELECT 
            T.OID AS DataFieldCategory_OID, 
            T.Title AS DataFieldCategory_Title, 
            T.ShortTitle AS DataFieldCategory_ShortTitle, 
            T.OptimisticLockField AS DataFieldCategory_OptimisticLockField, 
            T.GCRecord AS DataFieldCategory_GCRecord, 
            T.[Order] AS DataFieldCategory_Order, 
            True AS _from0
        FROM BlueNorthEntities.DataFieldCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.StandardContentStandardContents_QuestionGroupQuestionGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView62()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardContentStandardContents_QuestionGroupQuestionGroups
        [BlueNorthModel.Store.StandardContentStandardContents_QuestionGroupQuestionGroups](T1.[StandardContentStandardContents_QuestionGroupQuestionGroups.QuestionGroups], T1.[StandardContentStandardContents_QuestionGroupQuestionGroups.StandardContents], T1.[StandardContentStandardContents_QuestionGroupQuestionGroups.OID], T1.[StandardContentStandardContents_QuestionGroupQuestionGroups.OptimisticLockField])
    FROM (
        SELECT 
            T.QuestionGroups AS [StandardContentStandardContents_QuestionGroupQuestionGroups.QuestionGroups], 
            T.StandardContents AS [StandardContentStandardContents_QuestionGroupQuestionGroups.StandardContents], 
            T.OID AS [StandardContentStandardContents_QuestionGroupQuestionGroups.OID], 
            T.OptimisticLockField AS [StandardContentStandardContents_QuestionGroupQuestionGroups.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.StandardContentStandardContents_QuestionGroupQuestionGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.IndicatorIndicators_ConversionFactorConversionFactors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView63()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IndicatorIndicators_ConversionFactorConversionFactors
        [BlueNorthModel.Store.IndicatorIndicators_ConversionFactorConversionFactors](T1.[IndicatorIndicators_ConversionFactorConversionFactors.ConversionFactors], T1.[IndicatorIndicators_ConversionFactorConversionFactors.Indicators], T1.[IndicatorIndicators_ConversionFactorConversionFactors.OID], T1.[IndicatorIndicators_ConversionFactorConversionFactors.OptimisticLockField])
    FROM (
        SELECT 
            T.ConversionFactors AS [IndicatorIndicators_ConversionFactorConversionFactors.ConversionFactors], 
            T.Indicators AS [IndicatorIndicators_ConversionFactorConversionFactors.Indicators], 
            T.OID AS [IndicatorIndicators_ConversionFactorConversionFactors.OID], 
            T.OptimisticLockField AS [IndicatorIndicators_ConversionFactorConversionFactors.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.IndicatorIndicators_ConversionFactorConversionFactors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.XPObjectType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView64()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing XPObjectType
        [BlueNorthModel.Store.XPObjectType](T1.XPObjectType_OID, T1.XPObjectType_TypeName, T1.XPObjectType_AssemblyName)
    FROM (
        SELECT 
            T.OID AS XPObjectType_OID, 
            T.TypeName AS XPObjectType_TypeName, 
            T.AssemblyName AS XPObjectType_AssemblyName, 
            True AS _from0
        FROM BlueNorthEntities.XPObjectTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UnitCharacteristicScore.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView65()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitCharacteristicScore
        [BlueNorthModel.Store.UnitCharacteristicScore](T1.UnitCharacteristicScore_OID, T1.UnitCharacteristicScore_Characteristic, T1.UnitCharacteristicScore_Framework, T1.UnitCharacteristicScore_Unit, T1.UnitCharacteristicScore_Calculated, T1.UnitCharacteristicScore_Score, T1.UnitCharacteristicScore_OptimisticLockField, T1.UnitCharacteristicScore_GCRecord)
    FROM (
        SELECT 
            T.OID AS UnitCharacteristicScore_OID, 
            T.Characteristic AS UnitCharacteristicScore_Characteristic, 
            T.Framework AS UnitCharacteristicScore_Framework, 
            T.Unit AS UnitCharacteristicScore_Unit, 
            T.Calculated AS UnitCharacteristicScore_Calculated, 
            T.Score AS UnitCharacteristicScore_Score, 
            T.OptimisticLockField AS UnitCharacteristicScore_OptimisticLockField, 
            T.GCRecord AS UnitCharacteristicScore_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.UnitCharacteristicScores AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView66()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing User
        [BlueNorthModel.Store.User](T1.User_Oid, T1.User_Person, T1.User_Organisation, T1.User_CurrentUnit, T1.User_AcceptedTermsConditions)
    FROM (
        SELECT 
            T.Oid AS User_Oid, 
            T.Person AS User_Person, 
            T.Organisation AS User_Organisation, 
            T.CurrentUnit AS User_CurrentUnit, 
            T.AcceptedTermsConditions AS User_AcceptedTermsConditions, 
            True AS _from0
        FROM BlueNorthEntities.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.FileData.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView67()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FileData
        [BlueNorthModel.Store.FileData](T1.FileData_Oid, T1.FileData_size, T1.FileData_FileName, T1.FileData_Content, T1.FileData_OptimisticLockField, T1.FileData_GCRecord)
    FROM (
        SELECT 
            T.Oid AS FileData_Oid, 
            T.size AS FileData_size, 
            T.FileName AS FileData_FileName, 
            T.Content AS FileData_Content, 
            T.OptimisticLockField AS FileData_OptimisticLockField, 
            T.GCRecord AS FileData_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.FileDatas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PrimaryDataFieldUserEditMode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView68()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataFieldUserEditMode
        [BlueNorthModel.Store.PrimaryDataFieldUserEditMode](T1.PrimaryDataFieldUserEditMode_OID, T1.PrimaryDataFieldUserEditMode_PrimaryDataField, T1.PrimaryDataFieldUserEditMode_User, T1.PrimaryDataFieldUserEditMode_AreaSizeMode, T1.PrimaryDataFieldUserEditMode_OptimisticLockField, T1.PrimaryDataFieldUserEditMode_GCRecord, T1.PrimaryDataFieldUserEditMode_PeriodDataMode, T1.PrimaryDataFieldUserEditMode_Commodity)
    FROM (
        SELECT 
            T.OID AS PrimaryDataFieldUserEditMode_OID, 
            T.PrimaryDataField AS PrimaryDataFieldUserEditMode_PrimaryDataField, 
            T.User AS PrimaryDataFieldUserEditMode_User, 
            T.AreaSizeMode AS PrimaryDataFieldUserEditMode_AreaSizeMode, 
            T.OptimisticLockField AS PrimaryDataFieldUserEditMode_OptimisticLockField, 
            T.GCRecord AS PrimaryDataFieldUserEditMode_GCRecord, 
            T.PeriodDataMode AS PrimaryDataFieldUserEditMode_PeriodDataMode, 
            T.Commodity AS PrimaryDataFieldUserEditMode_Commodity, 
            True AS _from0
        FROM BlueNorthEntities.PrimaryDataFieldUserEditModes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView69()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems
        [BlueNorthModel.Store.StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems](T1.[StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.ImprovementPlanItems], T1.[StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.StandardContents], T1.[StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.OID], T1.[StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.OptimisticLockField])
    FROM (
        SELECT 
            T.ImprovementPlanItems AS [StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.ImprovementPlanItems], 
            T.StandardContents AS [StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.StandardContents], 
            T.OID AS [StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.OID], 
            T.OptimisticLockField AS [StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UserAssignedForUsers_UnitAssignedUnits.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView70()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserAssignedForUsers_UnitAssignedUnits
        [BlueNorthModel.Store.UserAssignedForUsers_UnitAssignedUnits](T1.[UserAssignedForUsers_UnitAssignedUnits.AssignedUnits], T1.[UserAssignedForUsers_UnitAssignedUnits.AssignedForUsers], T1.[UserAssignedForUsers_UnitAssignedUnits.OID], T1.[UserAssignedForUsers_UnitAssignedUnits.OptimisticLockField])
    FROM (
        SELECT 
            T.AssignedUnits AS [UserAssignedForUsers_UnitAssignedUnits.AssignedUnits], 
            T.AssignedForUsers AS [UserAssignedForUsers_UnitAssignedUnits.AssignedForUsers], 
            T.OID AS [UserAssignedForUsers_UnitAssignedUnits.OID], 
            T.OptimisticLockField AS [UserAssignedForUsers_UnitAssignedUnits.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.UserAssignedForUsers_UnitAssignedUnits AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UserCreatedByUsers_UnitCreatedUnits.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView71()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserCreatedByUsers_UnitCreatedUnits
        [BlueNorthModel.Store.UserCreatedByUsers_UnitCreatedUnits](T1.[UserCreatedByUsers_UnitCreatedUnits.CreatedUnits], T1.[UserCreatedByUsers_UnitCreatedUnits.CreatedByUsers], T1.[UserCreatedByUsers_UnitCreatedUnits.OID], T1.[UserCreatedByUsers_UnitCreatedUnits.OptimisticLockField])
    FROM (
        SELECT 
            T.CreatedUnits AS [UserCreatedByUsers_UnitCreatedUnits.CreatedUnits], 
            T.CreatedByUsers AS [UserCreatedByUsers_UnitCreatedUnits.CreatedByUsers], 
            T.OID AS [UserCreatedByUsers_UnitCreatedUnits.OID], 
            T.OptimisticLockField AS [UserCreatedByUsers_UnitCreatedUnits.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.UserCreatedByUsers_UnitCreatedUnits AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.AnswerNote.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView72()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AnswerNote
        [BlueNorthModel.Store.AnswerNote](T1.AnswerNote_OID, T1.AnswerNote_Answer, T1.AnswerNote_Note, T1.AnswerNote_OptimisticLockField, T1.AnswerNote_GCRecord)
    FROM (
        SELECT 
            T.OID AS AnswerNote_OID, 
            T.Answer AS AnswerNote_Answer, 
            T.Note AS AnswerNote_Note, 
            T.OptimisticLockField AS AnswerNote_OptimisticLockField, 
            T.GCRecord AS AnswerNote_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.AnswerNotes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.AnswerNoteAttachment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView73()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AnswerNoteAttachment
        [BlueNorthModel.Store.AnswerNoteAttachment](T1.AnswerNoteAttachment_OID, T1.AnswerNoteAttachment_AnswerNote, T1.AnswerNoteAttachment_Attachment, T1.AnswerNoteAttachment_OptimisticLockField, T1.AnswerNoteAttachment_GCRecord)
    FROM (
        SELECT 
            T.OID AS AnswerNoteAttachment_OID, 
            T.AnswerNote AS AnswerNoteAttachment_AnswerNote, 
            T.Attachment AS AnswerNoteAttachment_Attachment, 
            T.OptimisticLockField AS AnswerNoteAttachment_OptimisticLockField, 
            T.GCRecord AS AnswerNoteAttachment_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.AnswerNoteAttachments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.ConversionFactor.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView74()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConversionFactor
        [BlueNorthModel.Store.ConversionFactor](T1.ConversionFactor_OID, T1.ConversionFactor_Reference, T1.ConversionFactor_Name, T1.ConversionFactor_DataType, T1.ConversionFactor_Country, T1.ConversionFactor_Value, T1.ConversionFactor_StartYear, T1.ConversionFactor_EndYear, T1.ConversionFactor_Description, T1.ConversionFactor_Version, T1.ConversionFactor_OptimisticLockField, T1.ConversionFactor_GCRecord, T1.ConversionFactor_SourceUoM, T1.ConversionFactor_TargetUoM)
    FROM (
        SELECT 
            T.OID AS ConversionFactor_OID, 
            T.Reference AS ConversionFactor_Reference, 
            T.Name AS ConversionFactor_Name, 
            T.DataType AS ConversionFactor_DataType, 
            T.Country AS ConversionFactor_Country, 
            T.[Value] AS ConversionFactor_Value, 
            T.StartYear AS ConversionFactor_StartYear, 
            T.EndYear AS ConversionFactor_EndYear, 
            T.Description AS ConversionFactor_Description, 
            T.Version AS ConversionFactor_Version, 
            T.OptimisticLockField AS ConversionFactor_OptimisticLockField, 
            T.GCRecord AS ConversionFactor_GCRecord, 
            T.SourceUoM AS ConversionFactor_SourceUoM, 
            T.TargetUoM AS ConversionFactor_TargetUoM, 
            True AS _from0
        FROM BlueNorthEntities.ConversionFactors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Indicator.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView75()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Indicator
        [BlueNorthModel.Store.Indicator](T1.Indicator_OID, T1.Indicator_Title, T1.Indicator_ShortTitle, T1.Indicator_Characteristic, T1.Indicator_Version, T1.Indicator_OptimisticLockField, T1.Indicator_GCRecord, T1.Indicator_Markup, T1.Indicator_Formula, T1.Indicator_Order, T1.Indicator_Guidance, T1.Indicator_Interpretaion, T1.Indicator_Relevance, T1.Indicator_UnitOfMeasure, T1.Indicator_Conversion, T1.Indicator_TresholdValue)
    FROM (
        SELECT 
            T.OID AS Indicator_OID, 
            T.Title AS Indicator_Title, 
            T.ShortTitle AS Indicator_ShortTitle, 
            T.Characteristic AS Indicator_Characteristic, 
            T.Version AS Indicator_Version, 
            T.OptimisticLockField AS Indicator_OptimisticLockField, 
            T.GCRecord AS Indicator_GCRecord, 
            T.Markup AS Indicator_Markup, 
            T.Formula AS Indicator_Formula, 
            T.[Order] AS Indicator_Order, 
            T.Guidance AS Indicator_Guidance, 
            T.Interpretaion AS Indicator_Interpretaion, 
            T.Relevance AS Indicator_Relevance, 
            T.UnitOfMeasure AS Indicator_UnitOfMeasure, 
            T.Conversion AS Indicator_Conversion, 
            T.TresholdValue AS Indicator_TresholdValue, 
            True AS _from0
        FROM BlueNorthEntities.Indicators AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Principle.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView76()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Principle
        [BlueNorthModel.Store.Principle](T1.Principle_OID, T1.Principle_Title, T1.Principle_ShortTitle, T1.Principle_Reference, T1.Principle_Description, T1.Principle_Summary, T1.Principle_GuidanceText, T1.Principle_Dimension, T1.Principle_Version, T1.Principle_OptimisticLockField, T1.Principle_GCRecord, T1.Principle_Order, T1.Principle_Link, T1.Principle_Color)
    FROM (
        SELECT 
            T.OID AS Principle_OID, 
            T.Title AS Principle_Title, 
            T.ShortTitle AS Principle_ShortTitle, 
            T.Reference AS Principle_Reference, 
            T.Description AS Principle_Description, 
            T.Summary AS Principle_Summary, 
            T.GuidanceText AS Principle_GuidanceText, 
            T.Dimension AS Principle_Dimension, 
            T.Version AS Principle_Version, 
            T.OptimisticLockField AS Principle_OptimisticLockField, 
            T.GCRecord AS Principle_GCRecord, 
            T.[Order] AS Principle_Order, 
            T.Link AS Principle_Link, 
            T.Color AS Principle_Color, 
            True AS _from0
        FROM BlueNorthEntities.Principles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.UnitSecondaryUnits_CommoditySecondaryCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView77()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitSecondaryUnits_CommoditySecondaryCommodities
        [BlueNorthModel.Store.UnitSecondaryUnits_CommoditySecondaryCommodities](T1.[UnitSecondaryUnits_CommoditySecondaryCommodities.SecondaryCommodities], T1.[UnitSecondaryUnits_CommoditySecondaryCommodities.SecondaryUnits], T1.[UnitSecondaryUnits_CommoditySecondaryCommodities.OID], T1.[UnitSecondaryUnits_CommoditySecondaryCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.SecondaryCommodities AS [UnitSecondaryUnits_CommoditySecondaryCommodities.SecondaryCommodities], 
            T.SecondaryUnits AS [UnitSecondaryUnits_CommoditySecondaryCommodities.SecondaryUnits], 
            T.OID AS [UnitSecondaryUnits_CommoditySecondaryCommodities.OID], 
            T.OptimisticLockField AS [UnitSecondaryUnits_CommoditySecondaryCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthEntities.UnitSecondaryUnits_CommoditySecondaryCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.ImprovementPlanItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView78()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ImprovementPlanItem
        [BlueNorthModel.Store.ImprovementPlanItem](T1.ImprovementPlanItem_OID, T1.ImprovementPlanItem_DataSet, T1.ImprovementPlanItem_Characteristic, T1.ImprovementPlanItem_Question, T1.ImprovementPlanItem_Actions, T1.ImprovementPlanItem_Resposible, T1.ImprovementPlanItem_DueDate, T1.ImprovementPlanItem_Result, T1.ImprovementPlanItem_IsCompleted, T1.ImprovementPlanItem_OptimisticLockField, T1.ImprovementPlanItem_GCRecord, T1.ImprovementPlanItem_IsDisabled, T1.ImprovementPlanItem_StandardContent, T1.ImprovementPlanItem_Completed, T1.ImprovementPlanItem_Created, T1.ImprovementPlanItem_Cost, T1.ImprovementPlanItem_Attachment)
    FROM (
        SELECT 
            T.OID AS ImprovementPlanItem_OID, 
            T.DataSet AS ImprovementPlanItem_DataSet, 
            T.Characteristic AS ImprovementPlanItem_Characteristic, 
            T.Question AS ImprovementPlanItem_Question, 
            T.Actions AS ImprovementPlanItem_Actions, 
            T.Resposible AS ImprovementPlanItem_Resposible, 
            T.DueDate AS ImprovementPlanItem_DueDate, 
            T.Result AS ImprovementPlanItem_Result, 
            T.IsCompleted AS ImprovementPlanItem_IsCompleted, 
            T.OptimisticLockField AS ImprovementPlanItem_OptimisticLockField, 
            T.GCRecord AS ImprovementPlanItem_GCRecord, 
            T.IsDisabled AS ImprovementPlanItem_IsDisabled, 
            T.StandardContent AS ImprovementPlanItem_StandardContent, 
            T.Completed AS ImprovementPlanItem_Completed, 
            T.Created AS ImprovementPlanItem_Created, 
            T.Cost AS ImprovementPlanItem_Cost, 
            T.Attachment AS ImprovementPlanItem_Attachment, 
            True AS _from0
        FROM BlueNorthEntities.ImprovementPlanItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.FrameworkFrontMenuItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView79()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FrameworkFrontMenuItem
        [BlueNorthModel.Store.FrameworkFrontMenuItem](T1.FrameworkFrontMenuItem_OID, T1.FrameworkFrontMenuItem_Framework, T1.FrameworkFrontMenuItem_FrontMenuItem, T1.FrameworkFrontMenuItem_Disabled, T1.FrameworkFrontMenuItem_OptimisticLockField, T1.FrameworkFrontMenuItem_GCRecord)
    FROM (
        SELECT 
            T.OID AS FrameworkFrontMenuItem_OID, 
            T.Framework AS FrameworkFrontMenuItem_Framework, 
            T.FrontMenuItem AS FrameworkFrontMenuItem_FrontMenuItem, 
            T.Disabled AS FrameworkFrontMenuItem_Disabled, 
            T.OptimisticLockField AS FrameworkFrontMenuItem_OptimisticLockField, 
            T.GCRecord AS FrameworkFrontMenuItem_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.FrameworkFrontMenuItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.FrontMenuItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView80()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FrontMenuItem
        [BlueNorthModel.Store.FrontMenuItem](T1.FrontMenuItem_OID, T1.FrontMenuItem_Route, T1.FrontMenuItem_Text, T1.FrontMenuItem_AssessmentType, T1.FrontMenuItem_OptimisticLockField, T1.FrontMenuItem_GCRecord)
    FROM (
        SELECT 
            T.OID AS FrontMenuItem_OID, 
            T.Route AS FrontMenuItem_Route, 
            T.Text AS FrontMenuItem_Text, 
            T.AssessmentType AS FrontMenuItem_AssessmentType, 
            T.OptimisticLockField AS FrontMenuItem_OptimisticLockField, 
            T.GCRecord AS FrontMenuItem_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.FrontMenuItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.PrimaryDataMonthValue.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView81()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataMonthValue
        [BlueNorthModel.Store.PrimaryDataMonthValue](T1.PrimaryDataMonthValue_OID, T1.PrimaryDataMonthValue_PrimaryDataValue, T1.PrimaryDataMonthValue_MonthNumber, T1.PrimaryDataMonthValue_Value, T1.PrimaryDataMonthValue_Created, T1.PrimaryDataMonthValue_Modified, T1.PrimaryDataMonthValue_OptimisticLockField, T1.PrimaryDataMonthValue_GCRecord)
    FROM (
        SELECT 
            T.OID AS PrimaryDataMonthValue_OID, 
            T.PrimaryDataValue AS PrimaryDataMonthValue_PrimaryDataValue, 
            T.MonthNumber AS PrimaryDataMonthValue_MonthNumber, 
            T.[Value] AS PrimaryDataMonthValue_Value, 
            T.Created AS PrimaryDataMonthValue_Created, 
            T.Modified AS PrimaryDataMonthValue_Modified, 
            T.OptimisticLockField AS PrimaryDataMonthValue_OptimisticLockField, 
            T.GCRecord AS PrimaryDataMonthValue_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.PrimaryDataMonthValues AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.Commodity.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView82()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Commodity
        [BlueNorthModel.Store.Commodity](T1.Commodity_OID, T1.Commodity_Reference, T1.Commodity_Title, T1.Commodity_Category, T1.Commodity_Version, T1.Commodity_OptimisticLockField, T1.Commodity_GCRecord, T1.Commodity_UnitType)
    FROM (
        SELECT 
            T.OID AS Commodity_OID, 
            T.Reference AS Commodity_Reference, 
            T.Title AS Commodity_Title, 
            T.Category AS Commodity_Category, 
            T.Version AS Commodity_Version, 
            T.OptimisticLockField AS Commodity_OptimisticLockField, 
            T.GCRecord AS Commodity_GCRecord, 
            T.UnitType AS Commodity_UnitType, 
            True AS _from0
        FROM BlueNorthEntities.Commodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.CommodityPDMValue.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView83()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityPDMValue
        [BlueNorthModel.Store.CommodityPDMValue](T1.CommodityPDMValue_OID, T1.CommodityPDMValue_PrimaryDataMonthValue, T1.CommodityPDMValue_Commodity, T1.CommodityPDMValue_Value, T1.CommodityPDMValue_Created, T1.CommodityPDMValue_Modified, T1.CommodityPDMValue_OptimisticLockField, T1.CommodityPDMValue_GCRecord)
    FROM (
        SELECT 
            T.OID AS CommodityPDMValue_OID, 
            T.PrimaryDataMonthValue AS CommodityPDMValue_PrimaryDataMonthValue, 
            T.Commodity AS CommodityPDMValue_Commodity, 
            T.[Value] AS CommodityPDMValue_Value, 
            T.Created AS CommodityPDMValue_Created, 
            T.Modified AS CommodityPDMValue_Modified, 
            T.OptimisticLockField AS CommodityPDMValue_OptimisticLockField, 
            T.GCRecord AS CommodityPDMValue_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.CommodityPDMValues AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Addresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView84()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Addresses
        [BlueNorthModel.Address](T1.Address_Oid, T1.Address_Street, T1.Address_City, T1.Address_StateProvince, T1.Address_ZipPostal, T1.Address_Country, T1.Address_OptimisticLockField, T1.Address_GCRecord)
    FROM (
        SELECT 
            T.Oid AS Address_Oid, 
            T.Street AS Address_Street, 
            T.City AS Address_City, 
            T.StateProvince AS Address_StateProvince, 
            T.ZipPostal AS Address_ZipPostal, 
            T.Country AS Address_Country, 
            T.OptimisticLockField AS Address_OptimisticLockField, 
            T.GCRecord AS Address_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Address AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.CharacteristicGuidanceNotes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView85()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CharacteristicGuidanceNotes
        [BlueNorthModel.CharacteristicGuidanceNote](T1.CharacteristicGuidanceNote_OID, T1.CharacteristicGuidanceNote_Characteristic, T1.CharacteristicGuidanceNote_Text, T1.CharacteristicGuidanceNote_Markup, T1.CharacteristicGuidanceNote_Version, T1.CharacteristicGuidanceNote_OptimisticLockField, T1.CharacteristicGuidanceNote_GCRecord)
    FROM (
        SELECT 
            T.OID AS CharacteristicGuidanceNote_OID, 
            T.Characteristic AS CharacteristicGuidanceNote_Characteristic, 
            T.Text AS CharacteristicGuidanceNote_Text, 
            T.Markup AS CharacteristicGuidanceNote_Markup, 
            T.Version AS CharacteristicGuidanceNote_Version, 
            T.OptimisticLockField AS CharacteristicGuidanceNote_OptimisticLockField, 
            T.GCRecord AS CharacteristicGuidanceNote_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.CharacteristicGuidanceNote AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.CommodityCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView86()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityCategories
        [BlueNorthModel.CommodityCategory](T1.CommodityCategory_OID, T1.CommodityCategory_Title, T1.CommodityCategory_Version, T1.CommodityCategory_OptimisticLockField, T1.CommodityCategory_GCRecord)
    FROM (
        SELECT 
            T.OID AS CommodityCategory_OID, 
            T.Title AS CommodityCategory_Title, 
            T.Version AS CommodityCategory_Version, 
            T.OptimisticLockField AS CommodityCategory_OptimisticLockField, 
            T.GCRecord AS CommodityCategory_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.CommodityCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.CommodityIndicatorGuidances.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView87()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityIndicatorGuidances
        [BlueNorthModel.CommodityIndicatorGuidance](T1.CommodityIndicatorGuidance_OID, T1.CommodityIndicatorGuidance_Commodity, T1.CommodityIndicatorGuidance_Indicator, T1.CommodityIndicatorGuidance_Guidance, T1.CommodityIndicatorGuidance_Version, T1.CommodityIndicatorGuidance_OptimisticLockField, T1.CommodityIndicatorGuidance_GCRecord)
    FROM (
        SELECT 
            T.OID AS CommodityIndicatorGuidance_OID, 
            T.Commodity AS CommodityIndicatorGuidance_Commodity, 
            T.Indicator AS CommodityIndicatorGuidance_Indicator, 
            T.Guidance AS CommodityIndicatorGuidance_Guidance, 
            T.Version AS CommodityIndicatorGuidance_Version, 
            T.OptimisticLockField AS CommodityIndicatorGuidance_OptimisticLockField, 
            T.GCRecord AS CommodityIndicatorGuidance_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.CommodityIndicatorGuidance AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Countries.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView88()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Countries
        [BlueNorthModel.Country](T1.Country_Oid, T1.Country_Name, T1.Country_PhoneCode, T1.Country_OptimisticLockField, T1.Country_GCRecord)
    FROM (
        SELECT 
            T.Oid AS Country_Oid, 
            T.Name AS Country_Name, 
            T.PhoneCode AS Country_PhoneCode, 
            T.OptimisticLockField AS Country_OptimisticLockField, 
            T.GCRecord AS Country_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Country AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Dimensions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView89()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Dimensions
        [BlueNorthModel.Dimension](T1.Dimension_OID, T1.Dimension_Title, T1.Dimension_Reference, T1.Dimension_ShortTitle, T1.Dimension_Description, T1.Dimension_GuidanceText, T1.Dimension_Version, T1.Dimension_OptimisticLockField, T1.Dimension_GCRecord, T1.Dimension_Color)
    FROM (
        SELECT 
            T.OID AS Dimension_OID, 
            T.Title AS Dimension_Title, 
            T.Reference AS Dimension_Reference, 
            T.ShortTitle AS Dimension_ShortTitle, 
            T.Description AS Dimension_Description, 
            T.GuidanceText AS Dimension_GuidanceText, 
            T.Version AS Dimension_Version, 
            T.OptimisticLockField AS Dimension_OptimisticLockField, 
            T.GCRecord AS Dimension_GCRecord, 
            T.Color AS Dimension_Color, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Dimension AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Grades.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView90()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Grades
        [BlueNorthModel.Grade](T1.Grade_OID, T1.Grade_Title, T1.Grade_ShortTitle, T1.Grade_Version, T1.Grade_OptimisticLockField, T1.Grade_GCRecord)
    FROM (
        SELECT 
            T.OID AS Grade_OID, 
            T.Title AS Grade_Title, 
            T.ShortTitle AS Grade_ShortTitle, 
            T.Version AS Grade_Version, 
            T.OptimisticLockField AS Grade_OptimisticLockField, 
            T.GCRecord AS Grade_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Grade AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Organizations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView91()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Organizations
        [BlueNorthModel.Organization](T1.Organization_Oid, T1.Organization_FullName, T1.Organization_Profile, T1.Organization_Email, T1.Organization_WebSite, T1.Organization_Description, T1.Organization_Name)
    FROM (
        SELECT 
            T.Oid AS Organization_Oid, 
            T.FullName AS Organization_FullName, 
            T.Profile AS Organization_Profile, 
            T.Email AS Organization_Email, 
            T.WebSite AS Organization_WebSite, 
            T.Description AS Organization_Description, 
            T.Name AS Organization_Name, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Organization AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Parties.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView92()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Parties
        [BlueNorthModel.Party](T1.Party_Oid, T1.Party_Photo, T1.Party_Address1, T1.Party_Address2, T1.Party_OptimisticLockField, T1.Party_GCRecord, T1.Party_ObjectType)
    FROM (
        SELECT 
            T.Oid AS Party_Oid, 
            T.Photo AS Party_Photo, 
            T.Address1 AS Party_Address1, 
            T.Address2 AS Party_Address2, 
            T.OptimisticLockField AS Party_OptimisticLockField, 
            T.GCRecord AS Party_GCRecord, 
            T.ObjectType AS Party_ObjectType, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Party AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PermissionPolicyUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView93()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PermissionPolicyUsers
        [BlueNorthModel.PermissionPolicyUser](T1.PermissionPolicyUser_Oid, T1.PermissionPolicyUser_StoredPassword, T1.PermissionPolicyUser_ChangePasswordOnFirstLogon, T1.PermissionPolicyUser_UserName, T1.PermissionPolicyUser_IsActive, T1.PermissionPolicyUser_OptimisticLockField, T1.PermissionPolicyUser_GCRecord, T1.PermissionPolicyUser_ObjectType)
    FROM (
        SELECT 
            T.Oid AS PermissionPolicyUser_Oid, 
            T.StoredPassword AS PermissionPolicyUser_StoredPassword, 
            T.ChangePasswordOnFirstLogon AS PermissionPolicyUser_ChangePasswordOnFirstLogon, 
            T.UserName AS PermissionPolicyUser_UserName, 
            T.IsActive AS PermissionPolicyUser_IsActive, 
            T.OptimisticLockField AS PermissionPolicyUser_OptimisticLockField, 
            T.GCRecord AS PermissionPolicyUser_GCRecord, 
            T.ObjectType AS PermissionPolicyUser_ObjectType, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PermissionPolicyUser AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.People.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView94()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing People
        [BlueNorthModel.Person](T1.Person_Oid, T1.Person_FirstName, T1.Person_LastName, T1.Person_MiddleName, T1.Person_Birthday, T1.Person_Email)
    FROM (
        SELECT 
            T.Oid AS Person_Oid, 
            T.FirstName AS Person_FirstName, 
            T.LastName AS Person_LastName, 
            T.MiddleName AS Person_MiddleName, 
            T.Birthday AS Person_Birthday, 
            T.Email AS Person_Email, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Person AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PhoneNumbers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView95()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PhoneNumbers
        [BlueNorthModel.PhoneNumber](T1.PhoneNumber_Oid, T1.PhoneNumber_Number, T1.PhoneNumber_Party, T1.PhoneNumber_PhoneType, T1.PhoneNumber_OptimisticLockField, T1.PhoneNumber_GCRecord)
    FROM (
        SELECT 
            T.Oid AS PhoneNumber_Oid, 
            T.Number AS PhoneNumber_Number, 
            T.Party AS PhoneNumber_Party, 
            T.PhoneType AS PhoneNumber_PhoneType, 
            T.OptimisticLockField AS PhoneNumber_OptimisticLockField, 
            T.GCRecord AS PhoneNumber_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PhoneNumber AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PrincipleGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView96()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrincipleGroups
        [BlueNorthModel.PrincipleGroup](T1.PrincipleGroup_OID, T1.PrincipleGroup_Title, T1.PrincipleGroup_ShortTitle, T1.PrincipleGroup_Version, T1.PrincipleGroup_OptimisticLockField, T1.PrincipleGroup_GCRecord, T1.PrincipleGroup_Order)
    FROM (
        SELECT 
            T.OID AS PrincipleGroup_OID, 
            T.Title AS PrincipleGroup_Title, 
            T.ShortTitle AS PrincipleGroup_ShortTitle, 
            T.Version AS PrincipleGroup_Version, 
            T.OptimisticLockField AS PrincipleGroup_OptimisticLockField, 
            T.GCRecord AS PrincipleGroup_GCRecord, 
            T.[Order] AS PrincipleGroup_Order, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PrincipleGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.QuestionGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView97()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing QuestionGroups
        [BlueNorthModel.QuestionGroup](T1.QuestionGroup_OID, T1.QuestionGroup_Title, T1.QuestionGroup_ShortTitle, T1.QuestionGroup_Parent, T1.QuestionGroup_Version, T1.QuestionGroup_OptimisticLockField, T1.QuestionGroup_GCRecord, T1.QuestionGroup_GuidanceText)
    FROM (
        SELECT 
            T.OID AS QuestionGroup_OID, 
            T.Title AS QuestionGroup_Title, 
            T.ShortTitle AS QuestionGroup_ShortTitle, 
            T.Parent AS QuestionGroup_Parent, 
            T.Version AS QuestionGroup_Version, 
            T.OptimisticLockField AS QuestionGroup_OptimisticLockField, 
            T.GCRecord AS QuestionGroup_GCRecord, 
            T.GuidanceText AS QuestionGroup_GuidanceText, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.QuestionGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Retailers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView98()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Retailers
        [BlueNorthModel.Retailer](T1.Retailer_OID, T1.Retailer_Title, T1.Retailer_ShortTitle, T1.Retailer_Description, T1.Retailer_Image, T1.Retailer_Version, T1.Retailer_OptimisticLockField, T1.Retailer_GCRecord)
    FROM (
        SELECT 
            T.OID AS Retailer_OID, 
            T.Title AS Retailer_Title, 
            T.ShortTitle AS Retailer_ShortTitle, 
            T.Description AS Retailer_Description, 
            T.Image AS Retailer_Image, 
            T.Version AS Retailer_Version, 
            T.OptimisticLockField AS Retailer_OptimisticLockField, 
            T.GCRecord AS Retailer_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Retailer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Standards.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView99()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Standards
        [BlueNorthModel.Standard](T1.Standard_OID, T1.Standard_Reference, T1.Standard_Title, T1.Standard_ShortTitle, T1.Standard_Description, T1.Standard_Edition, T1.Standard_Version, T1.Standard_OptimisticLockField, T1.Standard_GCRecord, T1.Standard_LogoImage)
    FROM (
        SELECT 
            T.OID AS Standard_OID, 
            T.Reference AS Standard_Reference, 
            T.Title AS Standard_Title, 
            T.ShortTitle AS Standard_ShortTitle, 
            T.Description AS Standard_Description, 
            T.Edition AS Standard_Edition, 
            T.Version AS Standard_Version, 
            T.OptimisticLockField AS Standard_OptimisticLockField, 
            T.GCRecord AS Standard_GCRecord, 
            T.LogoImage AS Standard_LogoImage, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Standard AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.StandardChapters.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView100()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardChapters
        [BlueNorthModel.StandardChapter](T1.StandardChapter_OID, T1.StandardChapter_Title, T1.StandardChapter_ShortTitle, T1.StandardChapter_Reference, T1.StandardChapter_Standard, T1.StandardChapter_Parent, T1.StandardChapter_Version, T1.StandardChapter_OptimisticLockField, T1.StandardChapter_GCRecord)
    FROM (
        SELECT 
            T.OID AS StandardChapter_OID, 
            T.Title AS StandardChapter_Title, 
            T.ShortTitle AS StandardChapter_ShortTitle, 
            T.Reference AS StandardChapter_Reference, 
            T.Standard AS StandardChapter_Standard, 
            T.Parent AS StandardChapter_Parent, 
            T.Version AS StandardChapter_Version, 
            T.OptimisticLockField AS StandardChapter_OptimisticLockField, 
            T.GCRecord AS StandardChapter_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.StandardChapter AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.StandardContents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView101()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardContents
        [BlueNorthModel.StandardContent](T1.StandardContent_OID, T1.StandardContent_Title, T1.StandardContent_Reference, T1.StandardContent_Description, T1.StandardContent_StandardChapter, T1.StandardContent_Version, T1.StandardContent_OptimisticLockField, T1.StandardContent_GCRecord)
    FROM (
        SELECT 
            T.OID AS StandardContent_OID, 
            T.Title AS StandardContent_Title, 
            T.Reference AS StandardContent_Reference, 
            T.Description AS StandardContent_Description, 
            T.StandardChapter AS StandardContent_StandardChapter, 
            T.Version AS StandardContent_Version, 
            T.OptimisticLockField AS StandardContent_OptimisticLockField, 
            T.GCRecord AS StandardContent_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.StandardContent AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.StandardStandards_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView102()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardStandards_CommodityCommodities
        [BlueNorthModel.StandardStandards_CommodityCommodities](T1.[StandardStandards_CommodityCommodities.Commodities], T1.[StandardStandards_CommodityCommodities.Standards], T1.[StandardStandards_CommodityCommodities.OID], T1.[StandardStandards_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [StandardStandards_CommodityCommodities.Commodities], 
            T.Standards AS [StandardStandards_CommodityCommodities.Standards], 
            T.OID AS [StandardStandards_CommodityCommodities.OID], 
            T.OptimisticLockField AS [StandardStandards_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.StandardStandards_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Suppliers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView103()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Suppliers
        [BlueNorthModel.Supplier](T1.Supplier_OID, T1.Supplier_Title, T1.Supplier_ShortTitle, T1.Supplier_Description, T1.Supplier_Image, T1.Supplier_Version, T1.Supplier_OptimisticLockField, T1.Supplier_GCRecord)
    FROM (
        SELECT 
            T.OID AS Supplier_OID, 
            T.Title AS Supplier_Title, 
            T.ShortTitle AS Supplier_ShortTitle, 
            T.Description AS Supplier_Description, 
            T.Image AS Supplier_Image, 
            T.Version AS Supplier_Version, 
            T.OptimisticLockField AS Supplier_OptimisticLockField, 
            T.GCRecord AS Supplier_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Supplier AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.SupplierSuppliers_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView104()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SupplierSuppliers_CommodityCommodities
        [BlueNorthModel.SupplierSuppliers_CommodityCommodities](T1.[SupplierSuppliers_CommodityCommodities.Commodities], T1.[SupplierSuppliers_CommodityCommodities.Suppliers], T1.[SupplierSuppliers_CommodityCommodities.OID], T1.[SupplierSuppliers_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [SupplierSuppliers_CommodityCommodities.Commodities], 
            T.Suppliers AS [SupplierSuppliers_CommodityCommodities.Suppliers], 
            T.OID AS [SupplierSuppliers_CommodityCommodities.OID], 
            T.OptimisticLockField AS [SupplierSuppliers_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.SupplierSuppliers_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Units.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView105()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Units
        [BlueNorthModel.Unit](T1.Unit_Oid, T1.Unit_UnitType, T1.Unit_Organisation, T1.Unit_UnitStructure, T1.Unit_ContactPerson, T1.Unit_PrimaryCommodity, T1.Unit_LocationLongtitude, T1.Unit_LocationLattitude, T1.Unit_CurrentAssessmentType, T1.Unit_PrimaryFramework)
    FROM (
        SELECT 
            T.Oid AS Unit_Oid, 
            T.UnitType AS Unit_UnitType, 
            T.Organisation AS Unit_Organisation, 
            T.UnitStructure AS Unit_UnitStructure, 
            T.ContactPerson AS Unit_ContactPerson, 
            T.PrimaryCommodity AS Unit_PrimaryCommodity, 
            T.LocationLongtitude AS Unit_LocationLongtitude, 
            T.LocationLattitude AS Unit_LocationLattitude, 
            T.CurrentAssessmentType AS Unit_CurrentAssessmentType, 
            T.PrimaryFramework AS Unit_PrimaryFramework, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Unit AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UnitOfMeasures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView106()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitOfMeasures
        [BlueNorthModel.UnitOfMeasure](T1.UnitOfMeasure_OID, T1.UnitOfMeasure_Title, T1.UnitOfMeasure_ShortTitle, T1.UnitOfMeasure_Symbol, T1.UnitOfMeasure_Version, T1.UnitOfMeasure_OptimisticLockField, T1.UnitOfMeasure_GCRecord)
    FROM (
        SELECT 
            T.OID AS UnitOfMeasure_OID, 
            T.Title AS UnitOfMeasure_Title, 
            T.ShortTitle AS UnitOfMeasure_ShortTitle, 
            T.Symbol AS UnitOfMeasure_Symbol, 
            T.Version AS UnitOfMeasure_Version, 
            T.OptimisticLockField AS UnitOfMeasure_OptimisticLockField, 
            T.GCRecord AS UnitOfMeasure_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UnitOfMeasure AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UnitTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView107()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitTypes
        [BlueNorthModel.UnitType](T1.UnitType_OID, T1.UnitType_Name, T1.UnitType_Version, T1.UnitType_OptimisticLockField, T1.UnitType_GCRecord)
    FROM (
        SELECT 
            T.OID AS UnitType_OID, 
            T.Name AS UnitType_Name, 
            T.Version AS UnitType_Version, 
            T.OptimisticLockField AS UnitType_OptimisticLockField, 
            T.GCRecord AS UnitType_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UnitType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Versions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView108()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Versions
        [BlueNorthModel.Version](T1.Version_OID, T1.Version_Name, T1.Version_Created, T1.Version_CreatedBy, T1.Version_Modified, T1.Version_ModifiedBy, T1.Version_Deleted, T1.Version_Published, T1.Version_OptimisticLockField, T1.Version_GCRecord)
    FROM (
        SELECT 
            T.OID AS Version_OID, 
            T.Name AS Version_Name, 
            T.Created AS Version_Created, 
            T.CreatedBy AS Version_CreatedBy, 
            T.Modified AS Version_Modified, 
            T.ModifiedBy AS Version_ModifiedBy, 
            T.Deleted AS Version_Deleted, 
            T.Published AS Version_Published, 
            T.OptimisticLockField AS Version_OptimisticLockField, 
            T.GCRecord AS Version_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Version AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Organisations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView109()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Organisations
        [BlueNorthModel.Organisation](T1.Organisation_Oid, T1.Organisation_UnitsCountLimit)
    FROM (
        SELECT 
            T.Oid AS Organisation_Oid, 
            T.UnitsCountLimit AS Organisation_UnitsCountLimit, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Organisation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PermissionPolicyRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView110()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PermissionPolicyRoles
        [BlueNorthModel.PermissionPolicyRole](T1.PermissionPolicyRole_Oid, T1.PermissionPolicyRole_Name, T1.PermissionPolicyRole_IsAdministrative, T1.PermissionPolicyRole_CanEditModel, T1.PermissionPolicyRole_PermissionPolicy, T1.PermissionPolicyRole_OptimisticLockField, T1.PermissionPolicyRole_GCRecord, T1.PermissionPolicyRole_ObjectType)
    FROM (
        SELECT 
            T.Oid AS PermissionPolicyRole_Oid, 
            T.Name AS PermissionPolicyRole_Name, 
            T.IsAdministrative AS PermissionPolicyRole_IsAdministrative, 
            T.CanEditModel AS PermissionPolicyRole_CanEditModel, 
            T.PermissionPolicy AS PermissionPolicyRole_PermissionPolicy, 
            T.OptimisticLockField AS PermissionPolicyRole_OptimisticLockField, 
            T.GCRecord AS PermissionPolicyRole_GCRecord, 
            T.ObjectType AS PermissionPolicyRole_ObjectType, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PermissionPolicyRole AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PermissionPolicyUserUsers_PermissionPolicyRoleRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView111()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PermissionPolicyUserUsers_PermissionPolicyRoleRoles
        [BlueNorthModel.PermissionPolicyUserUsers_PermissionPolicyRoleRoles](T1.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID], T1.[PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OptimisticLockField]) WITH 
        RELATIONSHIP(CREATEREF(BlueNorthEntities.PermissionPolicyRoles, ROW(T1.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyRole.Oid]),[BlueNorthModel.PermissionPolicyRole]),[BlueNorthModel.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles],PermissionPolicyUserUsers_PermissionPolicyRoleRoles,PermissionPolicyRole) 
        RELATIONSHIP(CREATEREF(BlueNorthEntities.PermissionPolicyUsers, ROW(T1.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUser.Oid]),[BlueNorthModel.PermissionPolicyUser]),[BlueNorthModel.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users],PermissionPolicyUserUsers_PermissionPolicyRoleRoles,PermissionPolicyUser) 
    FROM (
        SELECT 
            T.OID AS [PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID], 
            T.OptimisticLockField AS [PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OptimisticLockField], 
            True AS _from0, 
            T.Roles AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyRole.Oid], 
            T.Users AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUser.Oid]
        FROM BlueNorthModelStoreContainer.PermissionPolicyUserUsers_PermissionPolicyRoleRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView112()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles
        [BlueNorthModel.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles](T3.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyRole], T3.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyUserUsers_PermissionPolicyRoleRoles])
    FROM (
        SELECT -- Constructing PermissionPolicyRole
            CreateRef(BlueNorthEntities.PermissionPolicyRoles, row(T2.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyRole.Oid]), [BlueNorthModel.PermissionPolicyRole]) AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyRole], 
            T2.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyUserUsers_PermissionPolicyRoleRoles]
        FROM (
            SELECT -- Constructing PermissionPolicyUserUsers_PermissionPolicyRoleRoles
                T1.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyRole.Oid], 
                CreateRef(BlueNorthEntities.PermissionPolicyUserUsers_PermissionPolicyRoleRoles, row(T1.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID]), [BlueNorthModel.PermissionPolicyUserUsers_PermissionPolicyRoleRoles]) AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyUserUsers_PermissionPolicyRoleRoles]
            FROM (
                SELECT 
                    T.Roles AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyRole.Oid], 
                    T.OID AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Roles.PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID], 
                    True AS _from0
                FROM BlueNorthModelStoreContainer.PermissionPolicyUserUsers_PermissionPolicyRoleRoles AS T
                WHERE T.Roles IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView113()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users
        [BlueNorthModel.FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users](T3.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUser], T3.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUserUsers_PermissionPolicyRoleRoles])
    FROM (
        SELECT -- Constructing PermissionPolicyUser
            CreateRef(BlueNorthEntities.PermissionPolicyUsers, row(T2.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUser.Oid]), [BlueNorthModel.PermissionPolicyUser]) AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUser], 
            T2.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUserUsers_PermissionPolicyRoleRoles]
        FROM (
            SELECT -- Constructing PermissionPolicyUserUsers_PermissionPolicyRoleRoles
                T1.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUser.Oid], 
                CreateRef(BlueNorthEntities.PermissionPolicyUserUsers_PermissionPolicyRoleRoles, row(T1.[FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID]), [BlueNorthModel.PermissionPolicyUserUsers_PermissionPolicyRoleRoles]) AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUserUsers_PermissionPolicyRoleRoles]
            FROM (
                SELECT 
                    T.Users AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUser.Oid], 
                    T.OID AS [FK_PermissionPolicyUserUsers_PermissionPolicyRoleRoles_Users.PermissionPolicyUserUsers_PermissionPolicyRoleRoles.OID], 
                    True AS _from0
                FROM BlueNorthModelStoreContainer.PermissionPolicyUserUsers_PermissionPolicyRoleRoles AS T
                WHERE T.Users IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.CommodityCommodities_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView114()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityCommodities_CharacteristicCharacteristics
        [BlueNorthModel.CommodityCommodities_CharacteristicCharacteristics](T1.[CommodityCommodities_CharacteristicCharacteristics.Characteristics], T1.[CommodityCommodities_CharacteristicCharacteristics.Commodities], T1.[CommodityCommodities_CharacteristicCharacteristics.OID], T1.[CommodityCommodities_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [CommodityCommodities_CharacteristicCharacteristics.Characteristics], 
            T.Commodities AS [CommodityCommodities_CharacteristicCharacteristics.Commodities], 
            T.OID AS [CommodityCommodities_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [CommodityCommodities_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.CommodityCommodities_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.DimensionDimensions_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView115()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DimensionDimensions_CommodityCommodities
        [BlueNorthModel.DimensionDimensions_CommodityCommodities](T1.[DimensionDimensions_CommodityCommodities.Commodities], T1.[DimensionDimensions_CommodityCommodities.Dimensions], T1.[DimensionDimensions_CommodityCommodities.OID], T1.[DimensionDimensions_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [DimensionDimensions_CommodityCommodities.Commodities], 
            T.Dimensions AS [DimensionDimensions_CommodityCommodities.Dimensions], 
            T.OID AS [DimensionDimensions_CommodityCommodities.OID], 
            T.OptimisticLockField AS [DimensionDimensions_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.DimensionDimensions_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PrinciplePrinciples_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView116()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrinciplePrinciples_CommodityCommodities
        [BlueNorthModel.PrinciplePrinciples_CommodityCommodities](T1.[PrinciplePrinciples_CommodityCommodities.Commodities], T1.[PrinciplePrinciples_CommodityCommodities.Principles], T1.[PrinciplePrinciples_CommodityCommodities.OID], T1.[PrinciplePrinciples_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [PrinciplePrinciples_CommodityCommodities.Commodities], 
            T.Principles AS [PrinciplePrinciples_CommodityCommodities.Principles], 
            T.OID AS [PrinciplePrinciples_CommodityCommodities.OID], 
            T.OptimisticLockField AS [PrinciplePrinciples_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PrinciplePrinciples_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.SupplierRetailers_RetailerSuppliers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView117()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SupplierRetailers_RetailerSuppliers
        [BlueNorthModel.SupplierRetailers_RetailerSuppliers](T1.[SupplierRetailers_RetailerSuppliers.Suppliers], T1.[SupplierRetailers_RetailerSuppliers.Retailers], T1.[SupplierRetailers_RetailerSuppliers.OID], T1.[SupplierRetailers_RetailerSuppliers.OptimisticLockField])
    FROM (
        SELECT 
            T.Suppliers AS [SupplierRetailers_RetailerSuppliers.Suppliers], 
            T.Retailers AS [SupplierRetailers_RetailerSuppliers.Retailers], 
            T.OID AS [SupplierRetailers_RetailerSuppliers.OID], 
            T.OptimisticLockField AS [SupplierRetailers_RetailerSuppliers.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.SupplierRetailers_RetailerSuppliers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UnitUnits_RetailerRetailers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView118()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitUnits_RetailerRetailers
        [BlueNorthModel.UnitUnits_RetailerRetailers](T1.[UnitUnits_RetailerRetailers.Retailers], T1.[UnitUnits_RetailerRetailers.Units], T1.[UnitUnits_RetailerRetailers.OID], T1.[UnitUnits_RetailerRetailers.OptimisticLockField])
    FROM (
        SELECT 
            T.Retailers AS [UnitUnits_RetailerRetailers.Retailers], 
            T.Units AS [UnitUnits_RetailerRetailers.Units], 
            T.OID AS [UnitUnits_RetailerRetailers.OID], 
            T.OptimisticLockField AS [UnitUnits_RetailerRetailers.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UnitUnits_RetailerRetailers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView119()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields
        [BlueNorthModel.UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields](T1.[UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.PrimaryDataFields], T1.[UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.UnitsOfMeasure], T1.[UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.OID], T1.[UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.OptimisticLockField])
    FROM (
        SELECT 
            T.PrimaryDataFields AS [UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.PrimaryDataFields], 
            T.UnitsOfMeasure AS [UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.UnitsOfMeasure], 
            T.OID AS [UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.OID], 
            T.OptimisticLockField AS [UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UnitOfMeasureUnitsOfMeasure_PrimaryDataFieldPrimaryDataFields AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PrimaryDataTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView120()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataTypes
        [BlueNorthModel.PrimaryDataType](T1.PrimaryDataType_OID, T1.PrimaryDataType_Title, T1.PrimaryDataType_ShortTitle, T1.PrimaryDataType_Version, T1.PrimaryDataType_OptimisticLockField, T1.PrimaryDataType_GCRecord, T1.PrimaryDataType_IsMapArea, T1.PrimaryDataType_IsBoolean, T1.PrimaryDataType_AreaSizeMode)
    FROM (
        SELECT 
            T.OID AS PrimaryDataType_OID, 
            T.Title AS PrimaryDataType_Title, 
            T.ShortTitle AS PrimaryDataType_ShortTitle, 
            T.Version AS PrimaryDataType_Version, 
            T.OptimisticLockField AS PrimaryDataType_OptimisticLockField, 
            T.GCRecord AS PrimaryDataType_GCRecord, 
            T.IsMapArea AS PrimaryDataType_IsMapArea, 
            T.IsBoolean AS PrimaryDataType_IsBoolean, 
            T.AreaSizeMode AS PrimaryDataType_AreaSizeMode, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PrimaryDataType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.OrganisationTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView121()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OrganisationTypes
        [BlueNorthModel.OrganisationType](T1.OrganisationType_OID, T1.OrganisationType_Title, T1.OrganisationType_ShortTitle, T1.OrganisationType_Version, T1.OrganisationType_OptimisticLockField, T1.OrganisationType_GCRecord)
    FROM (
        SELECT 
            T.OID AS OrganisationType_OID, 
            T.Title AS OrganisationType_Title, 
            T.ShortTitle AS OrganisationType_ShortTitle, 
            T.Version AS OrganisationType_Version, 
            T.OptimisticLockField AS OrganisationType_OptimisticLockField, 
            T.GCRecord AS OrganisationType_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.OrganisationType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.SPADataSets.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView122()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SPADataSets
        [BlueNorthModel.SPADataSet](T1.SPADataSet_OID, T1.SPADataSet_Unit, T1.SPADataSet_AssessmentType, T1.SPADataSet_Grade, T1.SPADataSet_Comment, T1.SPADataSet_Created, T1.SPADataSet_Modified, T1.SPADataSet_OptimisticLockField, T1.SPADataSet_GCRecord, T1.SPADataSet_Framework)
    FROM (
        SELECT 
            T.OID AS SPADataSet_OID, 
            T.Unit AS SPADataSet_Unit, 
            T.AssessmentType AS SPADataSet_AssessmentType, 
            T.Grade AS SPADataSet_Grade, 
            T.Comment AS SPADataSet_Comment, 
            T.Created AS SPADataSet_Created, 
            T.Modified AS SPADataSet_Modified, 
            T.OptimisticLockField AS SPADataSet_OptimisticLockField, 
            T.GCRecord AS SPADataSet_GCRecord, 
            T.Framework AS SPADataSet_Framework, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.SPADataSet AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Questions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView123()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Questions
        [BlueNorthModel.Question](T1.Question_OID, T1.Question_Title, T1.Question_Reference, T1.Question_GuidanceText, T1.Question_Group, T1.Question_DefaultAnswer, T1.Question_UnknownAnswerGuidance, T1.Question_NoAnswerGuidance, T1.Question_PartiallyAnswerGuidance, T1.Question_YesAnswerGuidance, T1.Question_Version, T1.Question_OptimisticLockField, T1.Question_GCRecord, T1.Question_ImprovementPlanQuestion, T1.Question_ImprovementPlanGuidance)
    FROM (
        SELECT 
            T.OID AS Question_OID, 
            T.Title AS Question_Title, 
            T.Reference AS Question_Reference, 
            T.GuidanceText AS Question_GuidanceText, 
            T.[Group] AS Question_Group, 
            T.DefaultAnswer AS Question_DefaultAnswer, 
            T.UnknownAnswerGuidance AS Question_UnknownAnswerGuidance, 
            T.NoAnswerGuidance AS Question_NoAnswerGuidance, 
            T.PartiallyAnswerGuidance AS Question_PartiallyAnswerGuidance, 
            T.YesAnswerGuidance AS Question_YesAnswerGuidance, 
            T.Version AS Question_Version, 
            T.OptimisticLockField AS Question_OptimisticLockField, 
            T.GCRecord AS Question_GCRecord, 
            T.ImprovementPlanQuestion AS Question_ImprovementPlanQuestion, 
            T.ImprovementPlanGuidance AS Question_ImprovementPlanGuidance, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Question AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.IndicatorDataSets.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView124()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IndicatorDataSets
        [BlueNorthModel.IndicatorDataSet](T1.IndicatorDataSet_OID, T1.IndicatorDataSet_Unit, T1.IndicatorDataSet_Grade, T1.IndicatorDataSet_Comment, T1.IndicatorDataSet_Created, T1.IndicatorDataSet_Modified, T1.IndicatorDataSet_OptimisticLockField, T1.IndicatorDataSet_GCRecord, T1.IndicatorDataSet_PeriodFromYear, T1.IndicatorDataSet_PeriodToYear, T1.IndicatorDataSet_PeriodFromMonth, T1.IndicatorDataSet_PeriodToMonth, T1.IndicatorDataSet_Framework)
    FROM (
        SELECT 
            T.OID AS IndicatorDataSet_OID, 
            T.Unit AS IndicatorDataSet_Unit, 
            T.Grade AS IndicatorDataSet_Grade, 
            T.Comment AS IndicatorDataSet_Comment, 
            T.Created AS IndicatorDataSet_Created, 
            T.Modified AS IndicatorDataSet_Modified, 
            T.OptimisticLockField AS IndicatorDataSet_OptimisticLockField, 
            T.GCRecord AS IndicatorDataSet_GCRecord, 
            T.PeriodFromYear AS IndicatorDataSet_PeriodFromYear, 
            T.PeriodToYear AS IndicatorDataSet_PeriodToYear, 
            T.PeriodFromMonth AS IndicatorDataSet_PeriodFromMonth, 
            T.PeriodToMonth AS IndicatorDataSet_PeriodToMonth, 
            T.Framework AS IndicatorDataSet_Framework, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.IndicatorDataSet AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Characteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView125()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Characteristics
        [BlueNorthModel.Characteristic](T1.Characteristic_OID, T1.Characteristic_Title, T1.Characteristic_ShortTitle, T1.Characteristic_Reference, T1.Characteristic_Description, T1.Characteristic_Summary, T1.Characteristic_GuidanceText, T1.Characteristic_Principle, T1.Characteristic_PrincipleGroup, T1.Characteristic_CommodityCategory, T1.Characteristic_OrganisationType, T1.Characteristic_Version, T1.Characteristic_OptimisticLockField, T1.Characteristic_GCRecord, T1.Characteristic_NonFulfilmentRisks)
    FROM (
        SELECT 
            T.OID AS Characteristic_OID, 
            T.Title AS Characteristic_Title, 
            T.ShortTitle AS Characteristic_ShortTitle, 
            T.Reference AS Characteristic_Reference, 
            T.Description AS Characteristic_Description, 
            T.Summary AS Characteristic_Summary, 
            T.GuidanceText AS Characteristic_GuidanceText, 
            T.Principle AS Characteristic_Principle, 
            T.PrincipleGroup AS Characteristic_PrincipleGroup, 
            T.CommodityCategory AS Characteristic_CommodityCategory, 
            T.OrganisationType AS Characteristic_OrganisationType, 
            T.Version AS Characteristic_Version, 
            T.OptimisticLockField AS Characteristic_OptimisticLockField, 
            T.GCRecord AS Characteristic_GCRecord, 
            T.NonFulfilmentRisks AS Characteristic_NonFulfilmentRisks, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Characteristic AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Answers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView126()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Answers
        [BlueNorthModel.Answer](T1.Answer_OID, T1.Answer_Question, T1.Answer_Choice, T1.Answer_User, T1.Answer_DataSet, T1.Answer_Created, T1.Answer_Modified, T1.Answer_OptimisticLockField, T1.Answer_GCRecord, T1.Answer_Characteristic)
    FROM (
        SELECT 
            T.OID AS Answer_OID, 
            T.Question AS Answer_Question, 
            T.Choice AS Answer_Choice, 
            T.User AS Answer_User, 
            T.DataSet AS Answer_DataSet, 
            T.Created AS Answer_Created, 
            T.Modified AS Answer_Modified, 
            T.OptimisticLockField AS Answer_OptimisticLockField, 
            T.GCRecord AS Answer_GCRecord, 
            T.Characteristic AS Answer_Characteristic, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Answer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView127()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics
        [BlueNorthModel.SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics](T1.[SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.NonRelevantCharacteristics], T1.[SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.SPADataSets], T1.[SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.OID], T1.[SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.NonRelevantCharacteristics AS [SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.NonRelevantCharacteristics], 
            T.SPADataSets AS [SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.SPADataSets], 
            T.OID AS [SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.OID], 
            T.OptimisticLockField AS [SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.SPADataSetSPADataSets_CharacteristicNonRelevantCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.QuestionGroupQuestionGroups_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView128()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing QuestionGroupQuestionGroups_CharacteristicCharacteristics
        [BlueNorthModel.QuestionGroupQuestionGroups_CharacteristicCharacteristics](T1.[QuestionGroupQuestionGroups_CharacteristicCharacteristics.Characteristics], T1.[QuestionGroupQuestionGroups_CharacteristicCharacteristics.QuestionGroups], T1.[QuestionGroupQuestionGroups_CharacteristicCharacteristics.OID], T1.[QuestionGroupQuestionGroups_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [QuestionGroupQuestionGroups_CharacteristicCharacteristics.Characteristics], 
            T.QuestionGroups AS [QuestionGroupQuestionGroups_CharacteristicCharacteristics.QuestionGroups], 
            T.OID AS [QuestionGroupQuestionGroups_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [QuestionGroupQuestionGroups_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.QuestionGroupQuestionGroups_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.QuestionQuestions_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView129()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing QuestionQuestions_CharacteristicCharacteristics
        [BlueNorthModel.QuestionQuestions_CharacteristicCharacteristics](T1.[QuestionQuestions_CharacteristicCharacteristics.Characteristics], T1.[QuestionQuestions_CharacteristicCharacteristics.Questions], T1.[QuestionQuestions_CharacteristicCharacteristics.OID], T1.[QuestionQuestions_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [QuestionQuestions_CharacteristicCharacteristics.Characteristics], 
            T.Questions AS [QuestionQuestions_CharacteristicCharacteristics.Questions], 
            T.OID AS [QuestionQuestions_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [QuestionQuestions_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.QuestionQuestions_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.FrameworkFrameworks_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView130()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FrameworkFrameworks_CharacteristicCharacteristics
        [BlueNorthModel.FrameworkFrameworks_CharacteristicCharacteristics](T1.[FrameworkFrameworks_CharacteristicCharacteristics.Characteristics], T1.[FrameworkFrameworks_CharacteristicCharacteristics.Frameworks], T1.[FrameworkFrameworks_CharacteristicCharacteristics.OID], T1.[FrameworkFrameworks_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [FrameworkFrameworks_CharacteristicCharacteristics.Characteristics], 
            T.Frameworks AS [FrameworkFrameworks_CharacteristicCharacteristics.Frameworks], 
            T.OID AS [FrameworkFrameworks_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [FrameworkFrameworks_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.FrameworkFrameworks_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.FrameworkFrameworks_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView131()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FrameworkFrameworks_CommodityCommodities
        [BlueNorthModel.FrameworkFrameworks_CommodityCommodities](T1.[FrameworkFrameworks_CommodityCommodities.Commodities], T1.[FrameworkFrameworks_CommodityCommodities.Frameworks], T1.[FrameworkFrameworks_CommodityCommodities.OID], T1.[FrameworkFrameworks_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [FrameworkFrameworks_CommodityCommodities.Commodities], 
            T.Frameworks AS [FrameworkFrameworks_CommodityCommodities.Frameworks], 
            T.OID AS [FrameworkFrameworks_CommodityCommodities.OID], 
            T.OptimisticLockField AS [FrameworkFrameworks_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.FrameworkFrameworks_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Scorings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView132()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Scorings
        [BlueNorthModel.Scoring](T1.Scoring_OID, T1.Scoring_Characteristic, T1.Scoring_Commodity, T1.Scoring_UnitType, T1.Scoring_Score, T1.Scoring_OptimisticLockField, T1.Scoring_GCRecord)
    FROM (
        SELECT 
            T.OID AS Scoring_OID, 
            T.Characteristic AS Scoring_Characteristic, 
            T.Commodity AS Scoring_Commodity, 
            T.UnitType AS Scoring_UnitType, 
            T.Score AS Scoring_Score, 
            T.OptimisticLockField AS Scoring_OptimisticLockField, 
            T.GCRecord AS Scoring_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Scoring AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.StandardContentStandardContents_CharacteristicCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView133()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardContentStandardContents_CharacteristicCharacteristics
        [BlueNorthModel.StandardContentStandardContents_CharacteristicCharacteristics](T1.[StandardContentStandardContents_CharacteristicCharacteristics.Characteristics], T1.[StandardContentStandardContents_CharacteristicCharacteristics.StandardContents], T1.[StandardContentStandardContents_CharacteristicCharacteristics.OID], T1.[StandardContentStandardContents_CharacteristicCharacteristics.OptimisticLockField])
    FROM (
        SELECT 
            T.Characteristics AS [StandardContentStandardContents_CharacteristicCharacteristics.Characteristics], 
            T.StandardContents AS [StandardContentStandardContents_CharacteristicCharacteristics.StandardContents], 
            T.OID AS [StandardContentStandardContents_CharacteristicCharacteristics.OID], 
            T.OptimisticLockField AS [StandardContentStandardContents_CharacteristicCharacteristics.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.StandardContentStandardContents_CharacteristicCharacteristics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UnitUnits_StandardStandards.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView134()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitUnits_StandardStandards
        [BlueNorthModel.UnitUnits_StandardStandards](T1.[UnitUnits_StandardStandards.Standards], T1.[UnitUnits_StandardStandards.Units], T1.[UnitUnits_StandardStandards.OID], T1.[UnitUnits_StandardStandards.OptimisticLockField])
    FROM (
        SELECT 
            T.Standards AS [UnitUnits_StandardStandards.Standards], 
            T.Units AS [UnitUnits_StandardStandards.Units], 
            T.OID AS [UnitUnits_StandardStandards.OID], 
            T.OptimisticLockField AS [UnitUnits_StandardStandards.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UnitUnits_StandardStandards AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Frameworks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView135()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Frameworks
        [BlueNorthModel.Framework](T1.Framework_OID, T1.Framework_Title, T1.Framework_ShortTitle, T1.Framework_Version, T1.Framework_OptimisticLockField, T1.Framework_GCRecord, T1.Framework_OrganisationType, T1.Framework_ScoringMode)
    FROM (
        SELECT 
            T.OID AS Framework_OID, 
            T.Title AS Framework_Title, 
            T.ShortTitle AS Framework_ShortTitle, 
            T.Version AS Framework_Version, 
            T.OptimisticLockField AS Framework_OptimisticLockField, 
            T.GCRecord AS Framework_GCRecord, 
            T.OrganisationType AS Framework_OrganisationType, 
            T.ScoringMode AS Framework_ScoringMode, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Framework AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UnitUnits_SupplierSuppliers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView136()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitUnits_SupplierSuppliers
        [BlueNorthModel.UnitUnits_SupplierSuppliers](T1.[UnitUnits_SupplierSuppliers.Suppliers], T1.[UnitUnits_SupplierSuppliers.Units], T1.[UnitUnits_SupplierSuppliers.OID], T1.[UnitUnits_SupplierSuppliers.OptimisticLockField])
    FROM (
        SELECT 
            T.Suppliers AS [UnitUnits_SupplierSuppliers.Suppliers], 
            T.Units AS [UnitUnits_SupplierSuppliers.Units], 
            T.OID AS [UnitUnits_SupplierSuppliers.OID], 
            T.OptimisticLockField AS [UnitUnits_SupplierSuppliers.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UnitUnits_SupplierSuppliers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PriorCharacteristics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView137()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PriorCharacteristics
        [BlueNorthModel.PriorCharacteristic](T1.PriorCharacteristic_OID, T1.PriorCharacteristic_DataSet, T1.PriorCharacteristic_Characteristic, T1.PriorCharacteristic_Order, T1.PriorCharacteristic_OptimisticLockField, T1.PriorCharacteristic_GCRecord)
    FROM (
        SELECT 
            T.OID AS PriorCharacteristic_OID, 
            T.DataSet AS PriorCharacteristic_DataSet, 
            T.Characteristic AS PriorCharacteristic_Characteristic, 
            T.[Order] AS PriorCharacteristic_Order, 
            T.OptimisticLockField AS PriorCharacteristic_OptimisticLockField, 
            T.GCRecord AS PriorCharacteristic_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PriorCharacteristic AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PrimaryDataValues.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView138()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataValues
        [BlueNorthModel.PrimaryDataValue](T1.PrimaryDataValue_OID, T1.PrimaryDataValue_PrimaryDataField, T1.PrimaryDataValue_DataSet, T1.PrimaryDataValue_Value, T1.PrimaryDataValue_Created, T1.PrimaryDataValue_Modified, T1.PrimaryDataValue_OptimisticLockField, T1.PrimaryDataValue_GCRecord)
    FROM (
        SELECT 
            T.OID AS PrimaryDataValue_OID, 
            T.PrimaryDataField AS PrimaryDataValue_PrimaryDataField, 
            T.DataSet AS PrimaryDataValue_DataSet, 
            T.[Value] AS PrimaryDataValue_Value, 
            T.Created AS PrimaryDataValue_Created, 
            T.Modified AS PrimaryDataValue_Modified, 
            T.OptimisticLockField AS PrimaryDataValue_OptimisticLockField, 
            T.GCRecord AS PrimaryDataValue_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PrimaryDataValue AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.IndicatorIndicators_FrameworkFrameworks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView139()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IndicatorIndicators_FrameworkFrameworks
        [BlueNorthModel.IndicatorIndicators_FrameworkFrameworks](T1.[IndicatorIndicators_FrameworkFrameworks.Frameworks], T1.[IndicatorIndicators_FrameworkFrameworks.Indicators], T1.[IndicatorIndicators_FrameworkFrameworks.OID], T1.[IndicatorIndicators_FrameworkFrameworks.OptimisticLockField])
    FROM (
        SELECT 
            T.Frameworks AS [IndicatorIndicators_FrameworkFrameworks.Frameworks], 
            T.Indicators AS [IndicatorIndicators_FrameworkFrameworks.Indicators], 
            T.OID AS [IndicatorIndicators_FrameworkFrameworks.OID], 
            T.OptimisticLockField AS [IndicatorIndicators_FrameworkFrameworks.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.IndicatorIndicators_FrameworkFrameworks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView140()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataFieldPrimaryDataFields_IndicatorIndicators
        [BlueNorthModel.PrimaryDataFieldPrimaryDataFields_IndicatorIndicators](T1.[PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.Indicators], T1.[PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.PrimaryDataFields], T1.[PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.OID], T1.[PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.OptimisticLockField])
    FROM (
        SELECT 
            T.Indicators AS [PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.Indicators], 
            T.PrimaryDataFields AS [PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.PrimaryDataFields], 
            T.OID AS [PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.OID], 
            T.OptimisticLockField AS [PrimaryDataFieldPrimaryDataFields_IndicatorIndicators.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PrimaryDataFieldPrimaryDataFields_IndicatorIndicators AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PrimaryDataFieldNotes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView141()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataFieldNotes
        [BlueNorthModel.PrimaryDataFieldNote](T1.PrimaryDataFieldNote_OID, T1.PrimaryDataFieldNote_PrimaryDataField, T1.PrimaryDataFieldNote_DataSet, T1.PrimaryDataFieldNote_User, T1.PrimaryDataFieldNote_Note, T1.PrimaryDataFieldNote_Created, T1.PrimaryDataFieldNote_Modified, T1.PrimaryDataFieldNote_OptimisticLockField, T1.PrimaryDataFieldNote_GCRecord)
    FROM (
        SELECT 
            T.OID AS PrimaryDataFieldNote_OID, 
            T.PrimaryDataField AS PrimaryDataFieldNote_PrimaryDataField, 
            T.DataSet AS PrimaryDataFieldNote_DataSet, 
            T.User AS PrimaryDataFieldNote_User, 
            T.Note AS PrimaryDataFieldNote_Note, 
            T.Created AS PrimaryDataFieldNote_Created, 
            T.Modified AS PrimaryDataFieldNote_Modified, 
            T.OptimisticLockField AS PrimaryDataFieldNote_OptimisticLockField, 
            T.GCRecord AS PrimaryDataFieldNote_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PrimaryDataFieldNote AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.ProductionAreas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView142()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductionAreas
        [BlueNorthModel.ProductionArea](T1.ProductionArea_OID, T1.ProductionArea_PrimaryDataValue, T1.ProductionArea_Name, T1.ProductionArea_DrawingData, T1.ProductionArea_Created, T1.ProductionArea_Modified, T1.ProductionArea_OptimisticLockField, T1.ProductionArea_GCRecord, T1.ProductionArea_Size)
    FROM (
        SELECT 
            T.OID AS ProductionArea_OID, 
            T.PrimaryDataValue AS ProductionArea_PrimaryDataValue, 
            T.Name AS ProductionArea_Name, 
            T.DrawingData AS ProductionArea_DrawingData, 
            T.Created AS ProductionArea_Created, 
            T.Modified AS ProductionArea_Modified, 
            T.OptimisticLockField AS ProductionArea_OptimisticLockField, 
            T.GCRecord AS ProductionArea_GCRecord, 
            T.Size AS ProductionArea_Size, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.ProductionArea AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UnitUnits_CommodityCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView143()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitUnits_CommodityCommodities
        [BlueNorthModel.UnitUnits_CommodityCommodities](T1.[UnitUnits_CommodityCommodities.Commodities], T1.[UnitUnits_CommodityCommodities.Units], T1.[UnitUnits_CommodityCommodities.OID], T1.[UnitUnits_CommodityCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.Commodities AS [UnitUnits_CommodityCommodities.Commodities], 
            T.Units AS [UnitUnits_CommodityCommodities.Units], 
            T.OID AS [UnitUnits_CommodityCommodities.OID], 
            T.OptimisticLockField AS [UnitUnits_CommodityCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UnitUnits_CommodityCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UserUsers_IndicatorIndicators.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView144()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserUsers_IndicatorIndicators
        [BlueNorthModel.UserUsers_IndicatorIndicators](T1.[UserUsers_IndicatorIndicators.Indicators], T1.[UserUsers_IndicatorIndicators.Users], T1.[UserUsers_IndicatorIndicators.OID], T1.[UserUsers_IndicatorIndicators.OptimisticLockField])
    FROM (
        SELECT 
            T.Indicators AS [UserUsers_IndicatorIndicators.Indicators], 
            T.Users AS [UserUsers_IndicatorIndicators.Users], 
            T.OID AS [UserUsers_IndicatorIndicators.OID], 
            T.OptimisticLockField AS [UserUsers_IndicatorIndicators.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UserUsers_IndicatorIndicators AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PrimaryDataFields.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView145()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataFields
        [BlueNorthModel.PrimaryDataField](T1.PrimaryDataField_OID, T1.PrimaryDataField_PrimaryDataType, T1.PrimaryDataField_GuidanceNotes, T1.PrimaryDataField_Notes, T1.PrimaryDataField_Version, T1.PrimaryDataField_OptimisticLockField, T1.PrimaryDataField_GCRecord, T1.PrimaryDataField_DefaultUOM, T1.PrimaryDataField_Reference, T1.PrimaryDataField_Name, T1.PrimaryDataField_Color, T1.PrimaryDataField_DependendOn, T1.PrimaryDataField_IsCommodityDependendent, T1.PrimaryDataField_Category, T1.PrimaryDataField_Order, T1.PrimaryDataField_IsMonthlyDataModeAvailable)
    FROM (
        SELECT 
            T.OID AS PrimaryDataField_OID, 
            T.PrimaryDataType AS PrimaryDataField_PrimaryDataType, 
            T.GuidanceNotes AS PrimaryDataField_GuidanceNotes, 
            T.Notes AS PrimaryDataField_Notes, 
            T.Version AS PrimaryDataField_Version, 
            T.OptimisticLockField AS PrimaryDataField_OptimisticLockField, 
            T.GCRecord AS PrimaryDataField_GCRecord, 
            T.DefaultUOM AS PrimaryDataField_DefaultUOM, 
            T.Reference AS PrimaryDataField_Reference, 
            T.Name AS PrimaryDataField_Name, 
            T.Color AS PrimaryDataField_Color, 
            T.DependendOn AS PrimaryDataField_DependendOn, 
            T.IsCommodityDependendent AS PrimaryDataField_IsCommodityDependendent, 
            T.Category AS PrimaryDataField_Category, 
            T.[Order] AS PrimaryDataField_Order, 
            T.IsMonthlyDataModeAvailable AS PrimaryDataField_IsMonthlyDataModeAvailable, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PrimaryDataField AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.CommodityPDValues.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView146()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityPDValues
        [BlueNorthModel.CommodityPDValue](T1.CommodityPDValue_OID, T1.CommodityPDValue_PrimaryDataValue, T1.CommodityPDValue_Value, T1.CommodityPDValue_Created, T1.CommodityPDValue_Modified, T1.CommodityPDValue_OptimisticLockField, T1.CommodityPDValue_GCRecord, T1.CommodityPDValue_Commodity)
    FROM (
        SELECT 
            T.OID AS CommodityPDValue_OID, 
            T.PrimaryDataValue AS CommodityPDValue_PrimaryDataValue, 
            T.[Value] AS CommodityPDValue_Value, 
            T.Created AS CommodityPDValue_Created, 
            T.Modified AS CommodityPDValue_Modified, 
            T.OptimisticLockField AS CommodityPDValue_OptimisticLockField, 
            T.GCRecord AS CommodityPDValue_GCRecord, 
            T.Commodity AS CommodityPDValue_Commodity, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.CommodityPDValue AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.DataFieldCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView147()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DataFieldCategories
        [BlueNorthModel.DataFieldCategory](T1.DataFieldCategory_OID, T1.DataFieldCategory_Title, T1.DataFieldCategory_ShortTitle, T1.DataFieldCategory_OptimisticLockField, T1.DataFieldCategory_GCRecord, T1.DataFieldCategory_Order)
    FROM (
        SELECT 
            T.OID AS DataFieldCategory_OID, 
            T.Title AS DataFieldCategory_Title, 
            T.ShortTitle AS DataFieldCategory_ShortTitle, 
            T.OptimisticLockField AS DataFieldCategory_OptimisticLockField, 
            T.GCRecord AS DataFieldCategory_GCRecord, 
            T.[Order] AS DataFieldCategory_Order, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.DataFieldCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.StandardContentStandardContents_QuestionGroupQuestionGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView148()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardContentStandardContents_QuestionGroupQuestionGroups
        [BlueNorthModel.StandardContentStandardContents_QuestionGroupQuestionGroups](T1.[StandardContentStandardContents_QuestionGroupQuestionGroups.QuestionGroups], T1.[StandardContentStandardContents_QuestionGroupQuestionGroups.StandardContents], T1.[StandardContentStandardContents_QuestionGroupQuestionGroups.OID], T1.[StandardContentStandardContents_QuestionGroupQuestionGroups.OptimisticLockField])
    FROM (
        SELECT 
            T.QuestionGroups AS [StandardContentStandardContents_QuestionGroupQuestionGroups.QuestionGroups], 
            T.StandardContents AS [StandardContentStandardContents_QuestionGroupQuestionGroups.StandardContents], 
            T.OID AS [StandardContentStandardContents_QuestionGroupQuestionGroups.OID], 
            T.OptimisticLockField AS [StandardContentStandardContents_QuestionGroupQuestionGroups.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.StandardContentStandardContents_QuestionGroupQuestionGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.IndicatorIndicators_ConversionFactorConversionFactors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView149()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing IndicatorIndicators_ConversionFactorConversionFactors
        [BlueNorthModel.IndicatorIndicators_ConversionFactorConversionFactors](T1.[IndicatorIndicators_ConversionFactorConversionFactors.ConversionFactors], T1.[IndicatorIndicators_ConversionFactorConversionFactors.Indicators], T1.[IndicatorIndicators_ConversionFactorConversionFactors.OID], T1.[IndicatorIndicators_ConversionFactorConversionFactors.OptimisticLockField])
    FROM (
        SELECT 
            T.ConversionFactors AS [IndicatorIndicators_ConversionFactorConversionFactors.ConversionFactors], 
            T.Indicators AS [IndicatorIndicators_ConversionFactorConversionFactors.Indicators], 
            T.OID AS [IndicatorIndicators_ConversionFactorConversionFactors.OID], 
            T.OptimisticLockField AS [IndicatorIndicators_ConversionFactorConversionFactors.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.IndicatorIndicators_ConversionFactorConversionFactors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.XPObjectTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView150()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing XPObjectTypes
        [BlueNorthModel.XPObjectType](T1.XPObjectType_OID, T1.XPObjectType_TypeName, T1.XPObjectType_AssemblyName)
    FROM (
        SELECT 
            T.OID AS XPObjectType_OID, 
            T.TypeName AS XPObjectType_TypeName, 
            T.AssemblyName AS XPObjectType_AssemblyName, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.XPObjectType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UnitCharacteristicScores.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView151()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitCharacteristicScores
        [BlueNorthModel.UnitCharacteristicScore](T1.UnitCharacteristicScore_OID, T1.UnitCharacteristicScore_Characteristic, T1.UnitCharacteristicScore_Framework, T1.UnitCharacteristicScore_Unit, T1.UnitCharacteristicScore_Calculated, T1.UnitCharacteristicScore_Score, T1.UnitCharacteristicScore_OptimisticLockField, T1.UnitCharacteristicScore_GCRecord)
    FROM (
        SELECT 
            T.OID AS UnitCharacteristicScore_OID, 
            T.Characteristic AS UnitCharacteristicScore_Characteristic, 
            T.Framework AS UnitCharacteristicScore_Framework, 
            T.Unit AS UnitCharacteristicScore_Unit, 
            T.Calculated AS UnitCharacteristicScore_Calculated, 
            T.Score AS UnitCharacteristicScore_Score, 
            T.OptimisticLockField AS UnitCharacteristicScore_OptimisticLockField, 
            T.GCRecord AS UnitCharacteristicScore_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UnitCharacteristicScore AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView152()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [BlueNorthModel.User](T1.User_Oid, T1.User_Person, T1.User_Organisation, T1.User_CurrentUnit, T1.User_AcceptedTermsConditions)
    FROM (
        SELECT 
            T.Oid AS User_Oid, 
            T.Person AS User_Person, 
            T.Organisation AS User_Organisation, 
            T.CurrentUnit AS User_CurrentUnit, 
            T.AcceptedTermsConditions AS User_AcceptedTermsConditions, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.FileDatas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView153()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FileDatas
        [BlueNorthModel.FileData](T1.FileData_Oid, T1.FileData_size, T1.FileData_FileName, T1.FileData_Content, T1.FileData_OptimisticLockField, T1.FileData_GCRecord)
    FROM (
        SELECT 
            T.Oid AS FileData_Oid, 
            T.size AS FileData_size, 
            T.FileName AS FileData_FileName, 
            T.Content AS FileData_Content, 
            T.OptimisticLockField AS FileData_OptimisticLockField, 
            T.GCRecord AS FileData_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.FileData AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PrimaryDataFieldUserEditModes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView154()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataFieldUserEditModes
        [BlueNorthModel.PrimaryDataFieldUserEditMode](T1.PrimaryDataFieldUserEditMode_OID, T1.PrimaryDataFieldUserEditMode_PrimaryDataField, T1.PrimaryDataFieldUserEditMode_User, T1.PrimaryDataFieldUserEditMode_AreaSizeMode, T1.PrimaryDataFieldUserEditMode_OptimisticLockField, T1.PrimaryDataFieldUserEditMode_GCRecord, T1.PrimaryDataFieldUserEditMode_PeriodDataMode, T1.PrimaryDataFieldUserEditMode_Commodity)
    FROM (
        SELECT 
            T.OID AS PrimaryDataFieldUserEditMode_OID, 
            T.PrimaryDataField AS PrimaryDataFieldUserEditMode_PrimaryDataField, 
            T.User AS PrimaryDataFieldUserEditMode_User, 
            T.AreaSizeMode AS PrimaryDataFieldUserEditMode_AreaSizeMode, 
            T.OptimisticLockField AS PrimaryDataFieldUserEditMode_OptimisticLockField, 
            T.GCRecord AS PrimaryDataFieldUserEditMode_GCRecord, 
            T.PeriodDataMode AS PrimaryDataFieldUserEditMode_PeriodDataMode, 
            T.Commodity AS PrimaryDataFieldUserEditMode_Commodity, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PrimaryDataFieldUserEditMode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView155()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems
        [BlueNorthModel.StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems](T1.[StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.ImprovementPlanItems], T1.[StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.StandardContents], T1.[StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.OID], T1.[StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.OptimisticLockField])
    FROM (
        SELECT 
            T.ImprovementPlanItems AS [StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.ImprovementPlanItems], 
            T.StandardContents AS [StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.StandardContents], 
            T.OID AS [StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.OID], 
            T.OptimisticLockField AS [StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.StandardContentStandardContents_ImprovementPlanItemImprovementPlanItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UserAssignedForUsers_UnitAssignedUnits.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView156()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserAssignedForUsers_UnitAssignedUnits
        [BlueNorthModel.UserAssignedForUsers_UnitAssignedUnits](T1.[UserAssignedForUsers_UnitAssignedUnits.AssignedUnits], T1.[UserAssignedForUsers_UnitAssignedUnits.AssignedForUsers], T1.[UserAssignedForUsers_UnitAssignedUnits.OID], T1.[UserAssignedForUsers_UnitAssignedUnits.OptimisticLockField])
    FROM (
        SELECT 
            T.AssignedUnits AS [UserAssignedForUsers_UnitAssignedUnits.AssignedUnits], 
            T.AssignedForUsers AS [UserAssignedForUsers_UnitAssignedUnits.AssignedForUsers], 
            T.OID AS [UserAssignedForUsers_UnitAssignedUnits.OID], 
            T.OptimisticLockField AS [UserAssignedForUsers_UnitAssignedUnits.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UserAssignedForUsers_UnitAssignedUnits AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UserCreatedByUsers_UnitCreatedUnits.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView157()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserCreatedByUsers_UnitCreatedUnits
        [BlueNorthModel.UserCreatedByUsers_UnitCreatedUnits](T1.[UserCreatedByUsers_UnitCreatedUnits.CreatedUnits], T1.[UserCreatedByUsers_UnitCreatedUnits.CreatedByUsers], T1.[UserCreatedByUsers_UnitCreatedUnits.OID], T1.[UserCreatedByUsers_UnitCreatedUnits.OptimisticLockField])
    FROM (
        SELECT 
            T.CreatedUnits AS [UserCreatedByUsers_UnitCreatedUnits.CreatedUnits], 
            T.CreatedByUsers AS [UserCreatedByUsers_UnitCreatedUnits.CreatedByUsers], 
            T.OID AS [UserCreatedByUsers_UnitCreatedUnits.OID], 
            T.OptimisticLockField AS [UserCreatedByUsers_UnitCreatedUnits.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UserCreatedByUsers_UnitCreatedUnits AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.AnswerNotes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView158()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AnswerNotes
        [BlueNorthModel.AnswerNote](T1.AnswerNote_OID, T1.AnswerNote_Answer, T1.AnswerNote_Note, T1.AnswerNote_OptimisticLockField, T1.AnswerNote_GCRecord)
    FROM (
        SELECT 
            T.OID AS AnswerNote_OID, 
            T.Answer AS AnswerNote_Answer, 
            T.Note AS AnswerNote_Note, 
            T.OptimisticLockField AS AnswerNote_OptimisticLockField, 
            T.GCRecord AS AnswerNote_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.AnswerNote AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.AnswerNoteAttachments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView159()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AnswerNoteAttachments
        [BlueNorthModel.AnswerNoteAttachment](T1.AnswerNoteAttachment_OID, T1.AnswerNoteAttachment_AnswerNote, T1.AnswerNoteAttachment_Attachment, T1.AnswerNoteAttachment_OptimisticLockField, T1.AnswerNoteAttachment_GCRecord)
    FROM (
        SELECT 
            T.OID AS AnswerNoteAttachment_OID, 
            T.AnswerNote AS AnswerNoteAttachment_AnswerNote, 
            T.Attachment AS AnswerNoteAttachment_Attachment, 
            T.OptimisticLockField AS AnswerNoteAttachment_OptimisticLockField, 
            T.GCRecord AS AnswerNoteAttachment_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.AnswerNoteAttachment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.ConversionFactors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView160()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ConversionFactors
        [BlueNorthModel.ConversionFactor](T1.ConversionFactor_OID, T1.ConversionFactor_Reference, T1.ConversionFactor_Name, T1.ConversionFactor_DataType, T1.ConversionFactor_Country, T1.ConversionFactor_Value, T1.ConversionFactor_StartYear, T1.ConversionFactor_EndYear, T1.ConversionFactor_Description, T1.ConversionFactor_Version, T1.ConversionFactor_OptimisticLockField, T1.ConversionFactor_GCRecord, T1.ConversionFactor_SourceUoM, T1.ConversionFactor_TargetUoM)
    FROM (
        SELECT 
            T.OID AS ConversionFactor_OID, 
            T.Reference AS ConversionFactor_Reference, 
            T.Name AS ConversionFactor_Name, 
            T.DataType AS ConversionFactor_DataType, 
            T.Country AS ConversionFactor_Country, 
            T.[Value] AS ConversionFactor_Value, 
            T.StartYear AS ConversionFactor_StartYear, 
            T.EndYear AS ConversionFactor_EndYear, 
            T.Description AS ConversionFactor_Description, 
            T.Version AS ConversionFactor_Version, 
            T.OptimisticLockField AS ConversionFactor_OptimisticLockField, 
            T.GCRecord AS ConversionFactor_GCRecord, 
            T.SourceUoM AS ConversionFactor_SourceUoM, 
            T.TargetUoM AS ConversionFactor_TargetUoM, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.ConversionFactor AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Indicators.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView161()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Indicators
        [BlueNorthModel.Indicator](T1.Indicator_OID, T1.Indicator_Title, T1.Indicator_ShortTitle, T1.Indicator_Characteristic, T1.Indicator_Version, T1.Indicator_OptimisticLockField, T1.Indicator_GCRecord, T1.Indicator_Markup, T1.Indicator_Formula, T1.Indicator_Order, T1.Indicator_Guidance, T1.Indicator_Interpretaion, T1.Indicator_Relevance, T1.Indicator_UnitOfMeasure, T1.Indicator_Conversion, T1.Indicator_TresholdValue)
    FROM (
        SELECT 
            T.OID AS Indicator_OID, 
            T.Title AS Indicator_Title, 
            T.ShortTitle AS Indicator_ShortTitle, 
            T.Characteristic AS Indicator_Characteristic, 
            T.Version AS Indicator_Version, 
            T.OptimisticLockField AS Indicator_OptimisticLockField, 
            T.GCRecord AS Indicator_GCRecord, 
            T.Markup AS Indicator_Markup, 
            T.Formula AS Indicator_Formula, 
            T.[Order] AS Indicator_Order, 
            T.Guidance AS Indicator_Guidance, 
            T.Interpretaion AS Indicator_Interpretaion, 
            T.Relevance AS Indicator_Relevance, 
            T.UnitOfMeasure AS Indicator_UnitOfMeasure, 
            T.Conversion AS Indicator_Conversion, 
            T.TresholdValue AS Indicator_TresholdValue, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Indicator AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Principles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView162()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Principles
        [BlueNorthModel.Principle](T1.Principle_OID, T1.Principle_Title, T1.Principle_ShortTitle, T1.Principle_Reference, T1.Principle_Description, T1.Principle_Summary, T1.Principle_GuidanceText, T1.Principle_Dimension, T1.Principle_Version, T1.Principle_OptimisticLockField, T1.Principle_GCRecord, T1.Principle_Order, T1.Principle_Link, T1.Principle_Color)
    FROM (
        SELECT 
            T.OID AS Principle_OID, 
            T.Title AS Principle_Title, 
            T.ShortTitle AS Principle_ShortTitle, 
            T.Reference AS Principle_Reference, 
            T.Description AS Principle_Description, 
            T.Summary AS Principle_Summary, 
            T.GuidanceText AS Principle_GuidanceText, 
            T.Dimension AS Principle_Dimension, 
            T.Version AS Principle_Version, 
            T.OptimisticLockField AS Principle_OptimisticLockField, 
            T.GCRecord AS Principle_GCRecord, 
            T.[Order] AS Principle_Order, 
            T.Link AS Principle_Link, 
            T.Color AS Principle_Color, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Principle AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.UnitSecondaryUnits_CommoditySecondaryCommodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView163()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UnitSecondaryUnits_CommoditySecondaryCommodities
        [BlueNorthModel.UnitSecondaryUnits_CommoditySecondaryCommodities](T1.[UnitSecondaryUnits_CommoditySecondaryCommodities.SecondaryCommodities], T1.[UnitSecondaryUnits_CommoditySecondaryCommodities.SecondaryUnits], T1.[UnitSecondaryUnits_CommoditySecondaryCommodities.OID], T1.[UnitSecondaryUnits_CommoditySecondaryCommodities.OptimisticLockField])
    FROM (
        SELECT 
            T.SecondaryCommodities AS [UnitSecondaryUnits_CommoditySecondaryCommodities.SecondaryCommodities], 
            T.SecondaryUnits AS [UnitSecondaryUnits_CommoditySecondaryCommodities.SecondaryUnits], 
            T.OID AS [UnitSecondaryUnits_CommoditySecondaryCommodities.OID], 
            T.OptimisticLockField AS [UnitSecondaryUnits_CommoditySecondaryCommodities.OptimisticLockField], 
            True AS _from0
        FROM BlueNorthModelStoreContainer.UnitSecondaryUnits_CommoditySecondaryCommodities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.ImprovementPlanItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView164()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ImprovementPlanItems
        [BlueNorthModel.ImprovementPlanItem](T1.ImprovementPlanItem_OID, T1.ImprovementPlanItem_DataSet, T1.ImprovementPlanItem_Characteristic, T1.ImprovementPlanItem_Question, T1.ImprovementPlanItem_Actions, T1.ImprovementPlanItem_Resposible, T1.ImprovementPlanItem_DueDate, T1.ImprovementPlanItem_Result, T1.ImprovementPlanItem_IsCompleted, T1.ImprovementPlanItem_OptimisticLockField, T1.ImprovementPlanItem_GCRecord, T1.ImprovementPlanItem_IsDisabled, T1.ImprovementPlanItem_StandardContent, T1.ImprovementPlanItem_Completed, T1.ImprovementPlanItem_Created, T1.ImprovementPlanItem_Cost, T1.ImprovementPlanItem_Attachment)
    FROM (
        SELECT 
            T.OID AS ImprovementPlanItem_OID, 
            T.DataSet AS ImprovementPlanItem_DataSet, 
            T.Characteristic AS ImprovementPlanItem_Characteristic, 
            T.Question AS ImprovementPlanItem_Question, 
            T.Actions AS ImprovementPlanItem_Actions, 
            T.Resposible AS ImprovementPlanItem_Resposible, 
            T.DueDate AS ImprovementPlanItem_DueDate, 
            T.Result AS ImprovementPlanItem_Result, 
            T.IsCompleted AS ImprovementPlanItem_IsCompleted, 
            T.OptimisticLockField AS ImprovementPlanItem_OptimisticLockField, 
            T.GCRecord AS ImprovementPlanItem_GCRecord, 
            T.IsDisabled AS ImprovementPlanItem_IsDisabled, 
            T.StandardContent AS ImprovementPlanItem_StandardContent, 
            T.Completed AS ImprovementPlanItem_Completed, 
            T.Created AS ImprovementPlanItem_Created, 
            T.Cost AS ImprovementPlanItem_Cost, 
            T.Attachment AS ImprovementPlanItem_Attachment, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.ImprovementPlanItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.FrameworkFrontMenuItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView165()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FrameworkFrontMenuItems
        [BlueNorthModel.FrameworkFrontMenuItem](T1.FrameworkFrontMenuItem_OID, T1.FrameworkFrontMenuItem_Framework, T1.FrameworkFrontMenuItem_FrontMenuItem, T1.FrameworkFrontMenuItem_Disabled, T1.FrameworkFrontMenuItem_OptimisticLockField, T1.FrameworkFrontMenuItem_GCRecord)
    FROM (
        SELECT 
            T.OID AS FrameworkFrontMenuItem_OID, 
            T.Framework AS FrameworkFrontMenuItem_Framework, 
            T.FrontMenuItem AS FrameworkFrontMenuItem_FrontMenuItem, 
            T.Disabled AS FrameworkFrontMenuItem_Disabled, 
            T.OptimisticLockField AS FrameworkFrontMenuItem_OptimisticLockField, 
            T.GCRecord AS FrameworkFrontMenuItem_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.FrameworkFrontMenuItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.FrontMenuItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView166()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing FrontMenuItems
        [BlueNorthModel.FrontMenuItem](T1.FrontMenuItem_OID, T1.FrontMenuItem_Route, T1.FrontMenuItem_Text, T1.FrontMenuItem_AssessmentType, T1.FrontMenuItem_OptimisticLockField, T1.FrontMenuItem_GCRecord)
    FROM (
        SELECT 
            T.OID AS FrontMenuItem_OID, 
            T.Route AS FrontMenuItem_Route, 
            T.Text AS FrontMenuItem_Text, 
            T.AssessmentType AS FrontMenuItem_AssessmentType, 
            T.OptimisticLockField AS FrontMenuItem_OptimisticLockField, 
            T.GCRecord AS FrontMenuItem_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.FrontMenuItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.PrimaryDataMonthValues.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView167()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrimaryDataMonthValues
        [BlueNorthModel.PrimaryDataMonthValue](T1.PrimaryDataMonthValue_OID, T1.PrimaryDataMonthValue_PrimaryDataValue, T1.PrimaryDataMonthValue_MonthNumber, T1.PrimaryDataMonthValue_Value, T1.PrimaryDataMonthValue_Created, T1.PrimaryDataMonthValue_Modified, T1.PrimaryDataMonthValue_OptimisticLockField, T1.PrimaryDataMonthValue_GCRecord)
    FROM (
        SELECT 
            T.OID AS PrimaryDataMonthValue_OID, 
            T.PrimaryDataValue AS PrimaryDataMonthValue_PrimaryDataValue, 
            T.MonthNumber AS PrimaryDataMonthValue_MonthNumber, 
            T.[Value] AS PrimaryDataMonthValue_Value, 
            T.Created AS PrimaryDataMonthValue_Created, 
            T.Modified AS PrimaryDataMonthValue_Modified, 
            T.OptimisticLockField AS PrimaryDataMonthValue_OptimisticLockField, 
            T.GCRecord AS PrimaryDataMonthValue_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.PrimaryDataMonthValue AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.Commodities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView168()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Commodities
        [BlueNorthModel.Commodity](T1.Commodity_OID, T1.Commodity_Reference, T1.Commodity_Title, T1.Commodity_Category, T1.Commodity_Version, T1.Commodity_OptimisticLockField, T1.Commodity_GCRecord, T1.Commodity_UnitType)
    FROM (
        SELECT 
            T.OID AS Commodity_OID, 
            T.Reference AS Commodity_Reference, 
            T.Title AS Commodity_Title, 
            T.Category AS Commodity_Category, 
            T.Version AS Commodity_Version, 
            T.OptimisticLockField AS Commodity_OptimisticLockField, 
            T.GCRecord AS Commodity_GCRecord, 
            T.UnitType AS Commodity_UnitType, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.Commodity AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.CommodityPDMValues.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView169()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CommodityPDMValues
        [BlueNorthModel.CommodityPDMValue](T1.CommodityPDMValue_OID, T1.CommodityPDMValue_PrimaryDataMonthValue, T1.CommodityPDMValue_Commodity, T1.CommodityPDMValue_Value, T1.CommodityPDMValue_Created, T1.CommodityPDMValue_Modified, T1.CommodityPDMValue_OptimisticLockField, T1.CommodityPDMValue_GCRecord)
    FROM (
        SELECT 
            T.OID AS CommodityPDMValue_OID, 
            T.PrimaryDataMonthValue AS CommodityPDMValue_PrimaryDataMonthValue, 
            T.Commodity AS CommodityPDMValue_Commodity, 
            T.[Value] AS CommodityPDMValue_Value, 
            T.Created AS CommodityPDMValue_Created, 
            T.Modified AS CommodityPDMValue_Modified, 
            T.OptimisticLockField AS CommodityPDMValue_OptimisticLockField, 
            T.GCRecord AS CommodityPDMValue_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.CommodityPDMValue AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthModelStoreContainer.StatusMatrix.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView170()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StatusMatrix
        [BlueNorthModel.Store.StatusMatrix](T1.StatusMatrix_OID, T1.StatusMatrix_Code, T1.StatusMatrix_Zone, T1.StatusMatrix_Reference, T1.StatusMatrix_AdjScore, T1.StatusMatrix_StatusText, T1.StatusMatrix_OptimisticLockField, T1.StatusMatrix_GCRecord)
    FROM (
        SELECT 
            T.OID AS StatusMatrix_OID, 
            T.Code AS StatusMatrix_Code, 
            T.Zone AS StatusMatrix_Zone, 
            T.Reference AS StatusMatrix_Reference, 
            T.AdjScore AS StatusMatrix_AdjScore, 
            T.StatusText AS StatusMatrix_StatusText, 
            T.OptimisticLockField AS StatusMatrix_OptimisticLockField, 
            T.GCRecord AS StatusMatrix_GCRecord, 
            True AS _from0
        FROM BlueNorthEntities.StatusMatrices AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for BlueNorthEntities.StatusMatrices.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView171()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StatusMatrices
        [BlueNorthModel.StatusMatrix](T1.StatusMatrix_OID, T1.StatusMatrix_Code, T1.StatusMatrix_Zone, T1.StatusMatrix_Reference, T1.StatusMatrix_AdjScore, T1.StatusMatrix_StatusText, T1.StatusMatrix_OptimisticLockField, T1.StatusMatrix_GCRecord)
    FROM (
        SELECT 
            T.OID AS StatusMatrix_OID, 
            T.Code AS StatusMatrix_Code, 
            T.Zone AS StatusMatrix_Zone, 
            T.Reference AS StatusMatrix_Reference, 
            T.AdjScore AS StatusMatrix_AdjScore, 
            T.StatusText AS StatusMatrix_StatusText, 
            T.OptimisticLockField AS StatusMatrix_OptimisticLockField, 
            T.GCRecord AS StatusMatrix_GCRecord, 
            True AS _from0
        FROM BlueNorthModelStoreContainer.StatusMatrix AS T
    ) AS T1");
        }
    }
}
